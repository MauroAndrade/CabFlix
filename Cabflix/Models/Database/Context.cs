

// ------------------------------------------------------------------------------------------------
// This code was generated by EntityFramework Reverse POCO Generator (http://www.reversepoco.com/).
// Created by Simon Hughes (https://about.me/simon.hughes).
//
// Do not make changes directly to this file - edit the template instead.
//
// The following connection settings were used to generate this file:
//     Configuration file:     "Cabflix\Web.config"
//     Connection String Name: "Connection"
//     Connection String:      "Data Source=DESKTOP-DI2ILJP\SQLEXPRESS;Initial Catalog=CabFlix;User ID=CabflixDB;password=**zapped**;;Connect Timeout=30;Encrypt=False;TrustServerCertificate=False;ApplicationIntent=ReadWrite;MultiSubnetFailover=False"
// ------------------------------------------------------------------------------------------------
// Database Edition        : Express Edition (64-bit)
// Database Engine Edition : Express
// Database Version        : 14.0.2037.2

// <auto-generated>
// ReSharper disable ConvertPropertyToExpressionBody
// ReSharper disable DoNotCallOverridableMethodsInConstructor
// ReSharper disable EmptyNamespace
// ReSharper disable InconsistentNaming
// ReSharper disable PartialMethodWithSinglePart
// ReSharper disable PartialTypeWithSinglePart
// ReSharper disable RedundantNameQualifier
// ReSharper disable RedundantOverridenMember
// ReSharper disable UseNameofExpression
// TargetFrameworkVersion = 4.6
#pragma warning disable 1591    //  Ignore "Missing XML Comment" warning


namespace Cabflix.Models.Database
{
    using System.Linq;

    #region Unit of work

    public interface IContext : System.IDisposable
    {
        System.Data.Entity.DbSet<Agendum> Agenda { get; set; } // AGENDA
        System.Data.Entity.DbSet<Ativo> Ativoes { get; set; } // ATIVO
        System.Data.Entity.DbSet<CcNivel> CcNivels { get; set; } // CC_NIVEL
        System.Data.Entity.DbSet<CentroCusto> CentroCustoes { get; set; } // CENTRO_CUSTO
        System.Data.Entity.DbSet<ClassificacaoDeLigacao> ClassificacaoDeLigacaos { get; set; } // CLASSIFICACAO_DE_LIGACAO
        System.Data.Entity.DbSet<Conta> Contas { get; set; } // CONTA
        System.Data.Entity.DbSet<ContaPadronizada> ContaPadronizadas { get; set; } // CONTA_PADRONIZADA
        System.Data.Entity.DbSet<Contato> Contatoes { get; set; } // CONTATO
        System.Data.Entity.DbSet<Empresa> Empresas { get; set; } // EMPRESA
        System.Data.Entity.DbSet<Fabricante> Fabricantes { get; set; } // FABRICANTE
        System.Data.Entity.DbSet<FaixaDeHorario> FaixaDeHorarios { get; set; } // FAIXA_DE_HORARIO
        System.Data.Entity.DbSet<GrupoDeServico> GrupoDeServicoes { get; set; } // GRUPO_DE_SERVICO
        System.Data.Entity.DbSet<LogImportacao> LogImportacaos { get; set; } // LOG_IMPORTACAO
        System.Data.Entity.DbSet<NumeroLinha> NumeroLinhas { get; set; } // NUMERO_LINHA
        System.Data.Entity.DbSet<Operadora> Operadoras { get; set; } // OPERADORA
        System.Data.Entity.DbSet<Pai> Pais { get; set; } // PAIS
        System.Data.Entity.DbSet<Perfil> Perfils { get; set; } // PERFIL
        System.Data.Entity.DbSet<PerfilPermissao> PerfilPermissaos { get; set; } // PERFIL_PERMISSAO
        System.Data.Entity.DbSet<Permissao> Permissaos { get; set; } // PERMISSAO
        System.Data.Entity.DbSet<Plano> Planoes { get; set; } // PLANO
        System.Data.Entity.DbSet<RegistrosIncorreto> RegistrosIncorretoes { get; set; } // REGISTROS_INCORRETOS
        System.Data.Entity.DbSet<Servico> Servicoes { get; set; } // SERVICO
        System.Data.Entity.DbSet<TemplateTermoEmail> TemplateTermoEmails { get; set; } // TEMPLATE_TERMO_EMAIL
        System.Data.Entity.DbSet<TipoAtivo> TipoAtivoes { get; set; } // TIPO_ATIVO
        System.Data.Entity.DbSet<TipoConta> TipoContas { get; set; } // TIPO_CONTA
        System.Data.Entity.DbSet<TipoTermo> TipoTermoes { get; set; } // TIPO_TERMO
        System.Data.Entity.DbSet<Uf> Ufs { get; set; } // UF
        System.Data.Entity.DbSet<UnidadeDeMedida> UnidadeDeMedidas { get; set; } // UNIDADE_DE_MEDIDA
        System.Data.Entity.DbSet<Usuario> Usuarios { get; set; } // USUARIO

        int SaveChanges();
        System.Threading.Tasks.Task<int> SaveChangesAsync();
        System.Threading.Tasks.Task<int> SaveChangesAsync(System.Threading.CancellationToken cancellationToken);
        System.Data.Entity.Infrastructure.DbChangeTracker ChangeTracker { get; }
        System.Data.Entity.Infrastructure.DbContextConfiguration Configuration { get; }
        System.Data.Entity.Database Database { get; }
        System.Data.Entity.Infrastructure.DbEntityEntry<TEntity> Entry<TEntity>(TEntity entity) where TEntity : class;
        System.Data.Entity.Infrastructure.DbEntityEntry Entry(object entity);
        System.Collections.Generic.IEnumerable<System.Data.Entity.Validation.DbEntityValidationResult> GetValidationErrors();
        System.Data.Entity.DbSet Set(System.Type entityType);
        System.Data.Entity.DbSet<TEntity> Set<TEntity>() where TEntity : class;
        string ToString();
    }

    #endregion

    #region Database context

    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.5.0")]
    public class Context : System.Data.Entity.DbContext, IContext
    {
        public System.Data.Entity.DbSet<Agendum> Agenda { get; set; } // AGENDA
        public System.Data.Entity.DbSet<Ativo> Ativoes { get; set; } // ATIVO
        public System.Data.Entity.DbSet<CcNivel> CcNivels { get; set; } // CC_NIVEL
        public System.Data.Entity.DbSet<CentroCusto> CentroCustoes { get; set; } // CENTRO_CUSTO
        public System.Data.Entity.DbSet<ClassificacaoDeLigacao> ClassificacaoDeLigacaos { get; set; } // CLASSIFICACAO_DE_LIGACAO
        public System.Data.Entity.DbSet<Conta> Contas { get; set; } // CONTA
        public System.Data.Entity.DbSet<ContaPadronizada> ContaPadronizadas { get; set; } // CONTA_PADRONIZADA
        public System.Data.Entity.DbSet<Contato> Contatoes { get; set; } // CONTATO
        public System.Data.Entity.DbSet<Empresa> Empresas { get; set; } // EMPRESA
        public System.Data.Entity.DbSet<Fabricante> Fabricantes { get; set; } // FABRICANTE
        public System.Data.Entity.DbSet<FaixaDeHorario> FaixaDeHorarios { get; set; } // FAIXA_DE_HORARIO
        public System.Data.Entity.DbSet<GrupoDeServico> GrupoDeServicoes { get; set; } // GRUPO_DE_SERVICO
        public System.Data.Entity.DbSet<LogImportacao> LogImportacaos { get; set; } // LOG_IMPORTACAO
        public System.Data.Entity.DbSet<NumeroLinha> NumeroLinhas { get; set; } // NUMERO_LINHA
        public System.Data.Entity.DbSet<Operadora> Operadoras { get; set; } // OPERADORA
        public System.Data.Entity.DbSet<Pai> Pais { get; set; } // PAIS
        public System.Data.Entity.DbSet<Perfil> Perfils { get; set; } // PERFIL
        public System.Data.Entity.DbSet<PerfilPermissao> PerfilPermissaos { get; set; } // PERFIL_PERMISSAO
        public System.Data.Entity.DbSet<Permissao> Permissaos { get; set; } // PERMISSAO
        public System.Data.Entity.DbSet<Plano> Planoes { get; set; } // PLANO
        public System.Data.Entity.DbSet<RegistrosIncorreto> RegistrosIncorretoes { get; set; } // REGISTROS_INCORRETOS
        public System.Data.Entity.DbSet<Servico> Servicoes { get; set; } // SERVICO
        public System.Data.Entity.DbSet<TemplateTermoEmail> TemplateTermoEmails { get; set; } // TEMPLATE_TERMO_EMAIL
        public System.Data.Entity.DbSet<TipoAtivo> TipoAtivoes { get; set; } // TIPO_ATIVO
        public System.Data.Entity.DbSet<TipoConta> TipoContas { get; set; } // TIPO_CONTA
        public System.Data.Entity.DbSet<TipoTermo> TipoTermoes { get; set; } // TIPO_TERMO
        public System.Data.Entity.DbSet<Uf> Ufs { get; set; } // UF
        public System.Data.Entity.DbSet<UnidadeDeMedida> UnidadeDeMedidas { get; set; } // UNIDADE_DE_MEDIDA
        public System.Data.Entity.DbSet<Usuario> Usuarios { get; set; } // USUARIO

        static Context()
        {
            System.Data.Entity.Database.SetInitializer<Context>(null);
        }

        public Context()
            : base("Name=Connection")
        {
        }

        public Context(string connectionString)
            : base(connectionString)
        {
        }

        public Context(string connectionString, System.Data.Entity.Infrastructure.DbCompiledModel model)
            : base(connectionString, model)
        {
        }

        public Context(System.Data.Common.DbConnection existingConnection, bool contextOwnsConnection)
            : base(existingConnection, contextOwnsConnection)
        {
        }

        public Context(System.Data.Common.DbConnection existingConnection, System.Data.Entity.Infrastructure.DbCompiledModel model, bool contextOwnsConnection)
            : base(existingConnection, model, contextOwnsConnection)
        {
        }

        public Context(System.Data.Entity.Core.Objects.ObjectContext objectContext, bool dbContextOwnsObjectContext)
            : base(objectContext, dbContextOwnsObjectContext)
        {
        }

        protected override void Dispose(bool disposing)
        {
            base.Dispose(disposing);
        }

        public bool IsSqlParameterNull(System.Data.SqlClient.SqlParameter param)
        {
            var sqlValue = param.SqlValue;
            var nullableValue = sqlValue as System.Data.SqlTypes.INullable;
            if (nullableValue != null)
                return nullableValue.IsNull;
            return (sqlValue == null || sqlValue == System.DBNull.Value);
        }

        protected override void OnModelCreating(System.Data.Entity.DbModelBuilder modelBuilder)
        {
            base.OnModelCreating(modelBuilder);

            modelBuilder.Configurations.Add(new AgendumConfiguration());
            modelBuilder.Configurations.Add(new AtivoConfiguration());
            modelBuilder.Configurations.Add(new CcNivelConfiguration());
            modelBuilder.Configurations.Add(new CentroCustoConfiguration());
            modelBuilder.Configurations.Add(new ClassificacaoDeLigacaoConfiguration());
            modelBuilder.Configurations.Add(new ContaConfiguration());
            modelBuilder.Configurations.Add(new ContaPadronizadaConfiguration());
            modelBuilder.Configurations.Add(new ContatoConfiguration());
            modelBuilder.Configurations.Add(new EmpresaConfiguration());
            modelBuilder.Configurations.Add(new FabricanteConfiguration());
            modelBuilder.Configurations.Add(new FaixaDeHorarioConfiguration());
            modelBuilder.Configurations.Add(new GrupoDeServicoConfiguration());
            modelBuilder.Configurations.Add(new LogImportacaoConfiguration());
            modelBuilder.Configurations.Add(new NumeroLinhaConfiguration());
            modelBuilder.Configurations.Add(new OperadoraConfiguration());
            modelBuilder.Configurations.Add(new PaiConfiguration());
            modelBuilder.Configurations.Add(new PerfilConfiguration());
            modelBuilder.Configurations.Add(new PerfilPermissaoConfiguration());
            modelBuilder.Configurations.Add(new PermissaoConfiguration());
            modelBuilder.Configurations.Add(new PlanoConfiguration());
            modelBuilder.Configurations.Add(new RegistrosIncorretoConfiguration());
            modelBuilder.Configurations.Add(new ServicoConfiguration());
            modelBuilder.Configurations.Add(new TemplateTermoEmailConfiguration());
            modelBuilder.Configurations.Add(new TipoAtivoConfiguration());
            modelBuilder.Configurations.Add(new TipoContaConfiguration());
            modelBuilder.Configurations.Add(new TipoTermoConfiguration());
            modelBuilder.Configurations.Add(new UfConfiguration());
            modelBuilder.Configurations.Add(new UnidadeDeMedidaConfiguration());
            modelBuilder.Configurations.Add(new UsuarioConfiguration());
        }

        public static System.Data.Entity.DbModelBuilder CreateModel(System.Data.Entity.DbModelBuilder modelBuilder, string schema)
        {
            modelBuilder.Configurations.Add(new AgendumConfiguration(schema));
            modelBuilder.Configurations.Add(new AtivoConfiguration(schema));
            modelBuilder.Configurations.Add(new CcNivelConfiguration(schema));
            modelBuilder.Configurations.Add(new CentroCustoConfiguration(schema));
            modelBuilder.Configurations.Add(new ClassificacaoDeLigacaoConfiguration(schema));
            modelBuilder.Configurations.Add(new ContaConfiguration(schema));
            modelBuilder.Configurations.Add(new ContaPadronizadaConfiguration(schema));
            modelBuilder.Configurations.Add(new ContatoConfiguration(schema));
            modelBuilder.Configurations.Add(new EmpresaConfiguration(schema));
            modelBuilder.Configurations.Add(new FabricanteConfiguration(schema));
            modelBuilder.Configurations.Add(new FaixaDeHorarioConfiguration(schema));
            modelBuilder.Configurations.Add(new GrupoDeServicoConfiguration(schema));
            modelBuilder.Configurations.Add(new LogImportacaoConfiguration(schema));
            modelBuilder.Configurations.Add(new NumeroLinhaConfiguration(schema));
            modelBuilder.Configurations.Add(new OperadoraConfiguration(schema));
            modelBuilder.Configurations.Add(new PaiConfiguration(schema));
            modelBuilder.Configurations.Add(new PerfilConfiguration(schema));
            modelBuilder.Configurations.Add(new PerfilPermissaoConfiguration(schema));
            modelBuilder.Configurations.Add(new PermissaoConfiguration(schema));
            modelBuilder.Configurations.Add(new PlanoConfiguration(schema));
            modelBuilder.Configurations.Add(new RegistrosIncorretoConfiguration(schema));
            modelBuilder.Configurations.Add(new ServicoConfiguration(schema));
            modelBuilder.Configurations.Add(new TemplateTermoEmailConfiguration(schema));
            modelBuilder.Configurations.Add(new TipoAtivoConfiguration(schema));
            modelBuilder.Configurations.Add(new TipoContaConfiguration(schema));
            modelBuilder.Configurations.Add(new TipoTermoConfiguration(schema));
            modelBuilder.Configurations.Add(new UfConfiguration(schema));
            modelBuilder.Configurations.Add(new UnidadeDeMedidaConfiguration(schema));
            modelBuilder.Configurations.Add(new UsuarioConfiguration(schema));
            return modelBuilder;
        }
    }
    #endregion

    #region Database context factory

    public class ContextFactory : System.Data.Entity.Infrastructure.IDbContextFactory<Context>
    {
        public Context Create()
        {
            return new Context();
        }
    }

    #endregion

    #region Fake Database context

    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.5.0")]
    public class FakeContext : IContext
    {
        public System.Data.Entity.DbSet<Agendum> Agenda { get; set; }
        public System.Data.Entity.DbSet<Ativo> Ativoes { get; set; }
        public System.Data.Entity.DbSet<CcNivel> CcNivels { get; set; }
        public System.Data.Entity.DbSet<CentroCusto> CentroCustoes { get; set; }
        public System.Data.Entity.DbSet<ClassificacaoDeLigacao> ClassificacaoDeLigacaos { get; set; }
        public System.Data.Entity.DbSet<Conta> Contas { get; set; }
        public System.Data.Entity.DbSet<ContaPadronizada> ContaPadronizadas { get; set; }
        public System.Data.Entity.DbSet<Contato> Contatoes { get; set; }
        public System.Data.Entity.DbSet<Empresa> Empresas { get; set; }
        public System.Data.Entity.DbSet<Fabricante> Fabricantes { get; set; }
        public System.Data.Entity.DbSet<FaixaDeHorario> FaixaDeHorarios { get; set; }
        public System.Data.Entity.DbSet<GrupoDeServico> GrupoDeServicoes { get; set; }
        public System.Data.Entity.DbSet<LogImportacao> LogImportacaos { get; set; }
        public System.Data.Entity.DbSet<NumeroLinha> NumeroLinhas { get; set; }
        public System.Data.Entity.DbSet<Operadora> Operadoras { get; set; }
        public System.Data.Entity.DbSet<Pai> Pais { get; set; }
        public System.Data.Entity.DbSet<Perfil> Perfils { get; set; }
        public System.Data.Entity.DbSet<PerfilPermissao> PerfilPermissaos { get; set; }
        public System.Data.Entity.DbSet<Permissao> Permissaos { get; set; }
        public System.Data.Entity.DbSet<Plano> Planoes { get; set; }
        public System.Data.Entity.DbSet<RegistrosIncorreto> RegistrosIncorretoes { get; set; }
        public System.Data.Entity.DbSet<Servico> Servicoes { get; set; }
        public System.Data.Entity.DbSet<TemplateTermoEmail> TemplateTermoEmails { get; set; }
        public System.Data.Entity.DbSet<TipoAtivo> TipoAtivoes { get; set; }
        public System.Data.Entity.DbSet<TipoConta> TipoContas { get; set; }
        public System.Data.Entity.DbSet<TipoTermo> TipoTermoes { get; set; }
        public System.Data.Entity.DbSet<Uf> Ufs { get; set; }
        public System.Data.Entity.DbSet<UnidadeDeMedida> UnidadeDeMedidas { get; set; }
        public System.Data.Entity.DbSet<Usuario> Usuarios { get; set; }

        public FakeContext()
        {
            _changeTracker = null;
            _configuration = null;
            _database = null;

            Agenda = new FakeDbSet<Agendum>("Id");
            Ativoes = new FakeDbSet<Ativo>("Id");
            CcNivels = new FakeDbSet<CcNivel>("Id");
            CentroCustoes = new FakeDbSet<CentroCusto>("Id");
            ClassificacaoDeLigacaos = new FakeDbSet<ClassificacaoDeLigacao>("Id");
            Contas = new FakeDbSet<Conta>("Id");
            ContaPadronizadas = new FakeDbSet<ContaPadronizada>("Id");
            Contatoes = new FakeDbSet<Contato>("Id");
            Empresas = new FakeDbSet<Empresa>("Id");
            Fabricantes = new FakeDbSet<Fabricante>("Id");
            FaixaDeHorarios = new FakeDbSet<FaixaDeHorario>("Id");
            GrupoDeServicoes = new FakeDbSet<GrupoDeServico>("Id");
            LogImportacaos = new FakeDbSet<LogImportacao>("Id");
            NumeroLinhas = new FakeDbSet<NumeroLinha>("Id");
            Operadoras = new FakeDbSet<Operadora>("Id");
            Pais = new FakeDbSet<Pai>("Id");
            Perfils = new FakeDbSet<Perfil>("Id");
            PerfilPermissaos = new FakeDbSet<PerfilPermissao>("Id");
            Permissaos = new FakeDbSet<Permissao>("Id");
            Planoes = new FakeDbSet<Plano>("Id");
            RegistrosIncorretoes = new FakeDbSet<RegistrosIncorreto>("Id");
            Servicoes = new FakeDbSet<Servico>("Id");
            TemplateTermoEmails = new FakeDbSet<TemplateTermoEmail>("Id");
            TipoAtivoes = new FakeDbSet<TipoAtivo>("Id");
            TipoContas = new FakeDbSet<TipoConta>("Id");
            TipoTermoes = new FakeDbSet<TipoTermo>("Id");
            Ufs = new FakeDbSet<Uf>("Id");
            UnidadeDeMedidas = new FakeDbSet<UnidadeDeMedida>("Id");
            Usuarios = new FakeDbSet<Usuario>("Id");
        }

        public int SaveChangesCount { get; private set; }
        public int SaveChanges()
        {
            ++SaveChangesCount;
            return 1;
        }

        public System.Threading.Tasks.Task<int> SaveChangesAsync()
        {
            ++SaveChangesCount;
            return System.Threading.Tasks.Task<int>.Factory.StartNew(() => 1);
        }

        public System.Threading.Tasks.Task<int> SaveChangesAsync(System.Threading.CancellationToken cancellationToken)
        {
            ++SaveChangesCount;
            return System.Threading.Tasks.Task<int>.Factory.StartNew(() => 1, cancellationToken);
        }

        protected virtual void Dispose(bool disposing)
        {
        }

        public void Dispose()
        {
            Dispose(true);
        }

        private System.Data.Entity.Infrastructure.DbChangeTracker _changeTracker;
        public System.Data.Entity.Infrastructure.DbChangeTracker ChangeTracker { get { return _changeTracker; } }
        private System.Data.Entity.Infrastructure.DbContextConfiguration _configuration;
        public System.Data.Entity.Infrastructure.DbContextConfiguration Configuration { get { return _configuration; } }
        private System.Data.Entity.Database _database;
        public System.Data.Entity.Database Database { get { return _database; } }
        public System.Data.Entity.Infrastructure.DbEntityEntry<TEntity> Entry<TEntity>(TEntity entity) where TEntity : class
        {
            throw new System.NotImplementedException();
        }
        public System.Data.Entity.Infrastructure.DbEntityEntry Entry(object entity)
        {
            throw new System.NotImplementedException();
        }
        public System.Collections.Generic.IEnumerable<System.Data.Entity.Validation.DbEntityValidationResult> GetValidationErrors()
        {
            throw new System.NotImplementedException();
        }
        public System.Data.Entity.DbSet Set(System.Type entityType)
        {
            throw new System.NotImplementedException();
        }
        public System.Data.Entity.DbSet<TEntity> Set<TEntity>() where TEntity : class
        {
            throw new System.NotImplementedException();
        }
        public override string ToString()
        {
            throw new System.NotImplementedException();
        }

    }

    // ************************************************************************
    // Fake DbSet
    // Implementing Find:
    //      The Find method is difficult to implement in a generic fashion. If
    //      you need to test code that makes use of the Find method it is
    //      easiest to create a test DbSet for each of the entity types that
    //      need to support find. You can then write logic to find that
    //      particular type of entity, as shown below:
    //      public class FakeBlogDbSet : FakeDbSet<Blog>
    //      {
    //          public override Blog Find(params object[] keyValues)
    //          {
    //              var id = (int) keyValues.Single();
    //              return this.SingleOrDefault(b => b.BlogId == id);
    //          }
    //      }
    //      Read more about it here: https://msdn.microsoft.com/en-us/data/dn314431.aspx
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.5.0")]
    public class FakeDbSet<TEntity> : System.Data.Entity.DbSet<TEntity>, IQueryable, System.Collections.Generic.IEnumerable<TEntity>, System.Data.Entity.Infrastructure.IDbAsyncEnumerable<TEntity> where TEntity : class
    {
        private readonly System.Reflection.PropertyInfo[] _primaryKeys;
        private readonly System.Collections.ObjectModel.ObservableCollection<TEntity> _data;
        private readonly IQueryable _query;

        public FakeDbSet()
        {
            _data = new System.Collections.ObjectModel.ObservableCollection<TEntity>();
            _query = _data.AsQueryable();
        }

        public FakeDbSet(params string[] primaryKeys)
        {
            _primaryKeys = typeof(TEntity).GetProperties().Where(x => primaryKeys.Contains(x.Name)).ToArray();
            _data = new System.Collections.ObjectModel.ObservableCollection<TEntity>();
            _query = _data.AsQueryable();
        }

        public override TEntity Find(params object[] keyValues)
        {
            if (_primaryKeys == null)
                throw new System.ArgumentException("No primary keys defined");
            if (keyValues.Length != _primaryKeys.Length)
                throw new System.ArgumentException("Incorrect number of keys passed to Find method");

            var keyQuery = this.AsQueryable();
            keyQuery = keyValues
                .Select((t, i) => i)
                .Aggregate(keyQuery,
                    (current, x) =>
                        current.Where(entity => _primaryKeys[x].GetValue(entity, null).Equals(keyValues[x])));

            return keyQuery.SingleOrDefault();
        }

        public override System.Threading.Tasks.Task<TEntity> FindAsync(System.Threading.CancellationToken cancellationToken, params object[] keyValues)
        {
            return System.Threading.Tasks.Task<TEntity>.Factory.StartNew(() => Find(keyValues), cancellationToken);
        }

        public override System.Threading.Tasks.Task<TEntity> FindAsync(params object[] keyValues)
        {
            return System.Threading.Tasks.Task<TEntity>.Factory.StartNew(() => Find(keyValues));
        }

        public override System.Collections.Generic.IEnumerable<TEntity> AddRange(System.Collections.Generic.IEnumerable<TEntity> entities)
        {
            if (entities == null) throw new System.ArgumentNullException("entities");
            var items = entities.ToList();
            foreach (var entity in items)
            {
                _data.Add(entity);
            }
            return items;
        }

        public override TEntity Add(TEntity item)
        {
            if (item == null) throw new System.ArgumentNullException("item");
            _data.Add(item);
            return item;
        }

        public override System.Collections.Generic.IEnumerable<TEntity> RemoveRange(System.Collections.Generic.IEnumerable<TEntity> entities)
        {
            if (entities == null) throw new System.ArgumentNullException("entities");
            var items = entities.ToList();
            foreach (var entity in items)
            {
                _data.Remove(entity);
            }
            return items;
        }

        public override TEntity Remove(TEntity item)
        {
            if (item == null) throw new System.ArgumentNullException("item");
            _data.Remove(item);
            return item;
        }

        public override TEntity Attach(TEntity item)
        {
            if (item == null) throw new System.ArgumentNullException("item");
            _data.Add(item);
            return item;
        }

        public override TEntity Create()
        {
            return System.Activator.CreateInstance<TEntity>();
        }

        public override TDerivedEntity Create<TDerivedEntity>()
        {
            return System.Activator.CreateInstance<TDerivedEntity>();
        }

        public override System.Collections.ObjectModel.ObservableCollection<TEntity> Local
        {
            get { return _data; }
        }

        System.Type IQueryable.ElementType
        {
            get { return _query.ElementType; }
        }

        System.Linq.Expressions.Expression IQueryable.Expression
        {
            get { return _query.Expression; }
        }

        IQueryProvider IQueryable.Provider
        {
            get { return new FakeDbAsyncQueryProvider<TEntity>(_query.Provider); }
        }

        System.Collections.IEnumerator System.Collections.IEnumerable.GetEnumerator()
        {
            return _data.GetEnumerator();
        }

        System.Collections.Generic.IEnumerator<TEntity> System.Collections.Generic.IEnumerable<TEntity>.GetEnumerator()
        {
            return _data.GetEnumerator();
        }

        System.Data.Entity.Infrastructure.IDbAsyncEnumerator<TEntity> System.Data.Entity.Infrastructure.IDbAsyncEnumerable<TEntity>.GetAsyncEnumerator()
        {
            return new FakeDbAsyncEnumerator<TEntity>(_data.GetEnumerator());
        }
    }

    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.5.0")]
    public class FakeDbAsyncQueryProvider<TEntity> : System.Data.Entity.Infrastructure.IDbAsyncQueryProvider
    {
        private readonly IQueryProvider _inner;

        public FakeDbAsyncQueryProvider(IQueryProvider inner)
        {
            _inner = inner;
        }

        public IQueryable CreateQuery(System.Linq.Expressions.Expression expression)
        {
            var m = expression as System.Linq.Expressions.MethodCallExpression;
            if (m != null)
            {
                var resultType = m.Method.ReturnType; // it shoud be IQueryable<T>
                var tElement = resultType.GetGenericArguments()[0];
                var queryType = typeof(FakeDbAsyncEnumerable<>).MakeGenericType(tElement);
                return (IQueryable) System.Activator.CreateInstance(queryType, expression);
            }
            return new FakeDbAsyncEnumerable<TEntity>(expression);
        }

        public IQueryable<TElement> CreateQuery<TElement>(System.Linq.Expressions.Expression expression)
        {
            var queryType = typeof(FakeDbAsyncEnumerable<>).MakeGenericType(typeof(TElement));
            return (IQueryable<TElement>)System.Activator.CreateInstance(queryType, expression);
        }

        public object Execute(System.Linq.Expressions.Expression expression)
        {
            return _inner.Execute(expression);
        }

        public TResult Execute<TResult>(System.Linq.Expressions.Expression expression)
        {
            return _inner.Execute<TResult>(expression);
        }

        public System.Threading.Tasks.Task<object> ExecuteAsync(System.Linq.Expressions.Expression expression, System.Threading.CancellationToken cancellationToken)
        {
            return System.Threading.Tasks.Task.FromResult(Execute(expression));
        }

        public System.Threading.Tasks.Task<TResult> ExecuteAsync<TResult>(System.Linq.Expressions.Expression expression, System.Threading.CancellationToken cancellationToken)
        {
            return System.Threading.Tasks.Task.FromResult(Execute<TResult>(expression));
        }
    }

    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.5.0")]
    public class FakeDbAsyncEnumerable<T> : EnumerableQuery<T>, System.Data.Entity.Infrastructure.IDbAsyncEnumerable<T>, IQueryable<T>
    {
        public FakeDbAsyncEnumerable(System.Collections.Generic.IEnumerable<T> enumerable)
            : base(enumerable)
        { }

        public FakeDbAsyncEnumerable(System.Linq.Expressions.Expression expression)
            : base(expression)
        { }

        public System.Data.Entity.Infrastructure.IDbAsyncEnumerator<T> GetAsyncEnumerator()
        {
            return new FakeDbAsyncEnumerator<T>(this.AsEnumerable().GetEnumerator());
        }

        System.Data.Entity.Infrastructure.IDbAsyncEnumerator System.Data.Entity.Infrastructure.IDbAsyncEnumerable.GetAsyncEnumerator()
        {
            return GetAsyncEnumerator();
        }

        IQueryProvider IQueryable.Provider
        {
            get { return new FakeDbAsyncQueryProvider<T>(this); }
        }
    }

    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.5.0")]
    public class FakeDbAsyncEnumerator<T> : System.Data.Entity.Infrastructure.IDbAsyncEnumerator<T>
    {
        private readonly System.Collections.Generic.IEnumerator<T> _inner;

        public FakeDbAsyncEnumerator(System.Collections.Generic.IEnumerator<T> inner)
        {
            _inner = inner;
        }

        public void Dispose()
        {
            _inner.Dispose();
        }

        public System.Threading.Tasks.Task<bool> MoveNextAsync(System.Threading.CancellationToken cancellationToken)
        {
            return System.Threading.Tasks.Task.FromResult(_inner.MoveNext());
        }

        public T Current
        {
            get { return _inner.Current; }
        }

        object System.Data.Entity.Infrastructure.IDbAsyncEnumerator.Current
        {
            get { return Current; }
        }
    }

    #endregion

    #region POCO classes

    // AGENDA
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.5.0")]
    public class Agendum
    {
        public int Id { get; set; } // ID (Primary key)
        public string Nome { get; set; } // NOME (length: 100)
        public string Telefone { get; set; } // TELEFONE (length: 50)
        public bool Individual { get; set; } // INDIVIDUAL
        public int FkClassificacao { get; set; } // FK_CLASSIFICACAO
        public int FkEmpresa { get; set; } // FK_EMPRESA
        public bool Removed { get; set; } // REMOVED

        // Foreign keys

        /// <summary>
        /// Parent ClassificacaoDeLigacao pointed by [AGENDA].([FkClassificacao]) (FK_AGENDA_CLASSIFICACAO_DE_LIGACAO)
        /// </summary>
        public virtual ClassificacaoDeLigacao ClassificacaoDeLigacao { get; set; } // FK_AGENDA_CLASSIFICACAO_DE_LIGACAO

        /// <summary>
        /// Parent Empresa pointed by [AGENDA].([FkEmpresa]) (FK_AGENDA_EMPRESA)
        /// </summary>
        public virtual Empresa Empresa { get; set; } // FK_AGENDA_EMPRESA

        public Agendum()
        {
            Individual = false;
            Removed = false;
        }
    }

    // ATIVO
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.5.0")]
    public class Ativo
    {
        public int Id { get; set; } // ID (Primary key)
        public string Identificador { get; set; } // IDENTIFICADOR (length: 100)
        public string Modelo { get; set; } // MODELO (length: 50)
        public System.DateTime DataAquisicao { get; set; } // DATA_AQUISICAO
        public string Status { get; set; } // STATUS (length: 50)
        public string ContatoNumero { get; set; } // CONTATO_NUMERO (length: 50)
        public string ContatoCc { get; set; } // CONTATO_CC (length: 50)
        public string ContatoNome { get; set; } // CONTATO_NOME (length: 50)
        public string NfNumero { get; set; } // NF_NUMERO (length: 50)
        public string NfSerie { get; set; } // NF_SERIE (length: 50)
        public System.DateTime? NfData { get; set; } // NF_DATA
        public string NfCnpj { get; set; } // NF_CNPJ (length: 50)
        public string NfRazaoSocial { get; set; } // NF_RAZAO_SOCIAL (length: 150)
        public int FkFabricante { get; set; } // FK_FABRICANTE
        public int FkTipo { get; set; } // FK_TIPO
        public int FkContato { get; set; } // FK_CONTATO
        public int FkNumeroLinha { get; set; } // FK_NUMERO_LINHA
        public int FkEmpresa { get; set; } // FK_EMPRESA

        // Foreign keys

        /// <summary>
        /// Parent Contato pointed by [ATIVO].([FkContato]) (FK_ATIVO_CONTATO)
        /// </summary>
        public virtual Contato Contato { get; set; } // FK_ATIVO_CONTATO

        /// <summary>
        /// Parent Empresa pointed by [ATIVO].([FkEmpresa]) (FK_ATIVO_EMPRESA)
        /// </summary>
        public virtual Empresa Empresa { get; set; } // FK_ATIVO_EMPRESA

        /// <summary>
        /// Parent Fabricante pointed by [ATIVO].([FkFabricante]) (FK_ATIVO_FABRICANTE)
        /// </summary>
        public virtual Fabricante Fabricante { get; set; } // FK_ATIVO_FABRICANTE

        /// <summary>
        /// Parent TipoAtivo pointed by [ATIVO].([FkTipo]) (FK_ATIVO_TIPO_ATIVO)
        /// </summary>
        public virtual TipoAtivo TipoAtivo { get; set; } // FK_ATIVO_TIPO_ATIVO

        public Ativo()
        {
            FkEmpresa = 1;
        }
    }

    // CC_NIVEL
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.5.0")]
    public class CcNivel
    {
        public int Id { get; set; } // ID (Primary key)
        public int Indice { get; set; } // INDICE
        public string Nome { get; set; } // NOME (length: 100)
        public int FkEmpresa { get; set; } // FK_EMPRESA
    }

    // CENTRO_CUSTO
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.5.0")]
    public class CentroCusto
    {
        public int Id { get; set; } // ID (Primary key)
        public string Nome { get; set; } // NOME (length: 50)
        public string Classificacao { get; set; } // CLASSIFICACAO (length: 50)
        public int FkEmpresa { get; set; } // FK_EMPRESA
        public int? FkPai { get; set; } // FK_PAI
        public bool Removed { get; set; } // REMOVED

        // Reverse navigation

        /// <summary>
        /// Child CentroCustoes where [CENTRO_CUSTO].[FK_PAI] point to this entity (FK_CENTRO_CUSTO_CENTRO_CUSTO)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<CentroCusto> CentroCustoes { get; set; } // CENTRO_CUSTO.FK_CENTRO_CUSTO_CENTRO_CUSTO
        /// <summary>
        /// Child NumeroLinhas where [NUMERO_LINHA].[FK_CENTRO_CUSTO] point to this entity (FK_NUMERO_LINHA_CENTRO_CUSTO)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<NumeroLinha> NumeroLinhas { get; set; } // NUMERO_LINHA.FK_NUMERO_LINHA_CENTRO_CUSTO

        // Foreign keys

        /// <summary>
        /// Parent CentroCusto pointed by [CENTRO_CUSTO].([FkPai]) (FK_CENTRO_CUSTO_CENTRO_CUSTO)
        /// </summary>
        public virtual CentroCusto CentroCusto_FkPai { get; set; } // FK_CENTRO_CUSTO_CENTRO_CUSTO

        /// <summary>
        /// Parent Empresa pointed by [CENTRO_CUSTO].([FkEmpresa]) (FK_CENTRO_CUSTO_EMPRESA)
        /// </summary>
        public virtual Empresa Empresa { get; set; } // FK_CENTRO_CUSTO_EMPRESA

        public CentroCusto()
        {
            Classificacao = "1";
            Removed = false;
            CentroCustoes = new System.Collections.Generic.List<CentroCusto>();
            NumeroLinhas = new System.Collections.Generic.List<NumeroLinha>();
        }
    }

    // CLASSIFICACAO_DE_LIGACAO
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.5.0")]
    public class ClassificacaoDeLigacao
    {
        public int Id { get; set; } // ID (Primary key)
        public string Nome { get; set; } // NOME (length: 50)
        public string Descricao { get; set; } // DESCRICAO (length: 50)
        public bool Intragrupo { get; set; } // INTRAGRUPO
        public int FkEmpresa { get; set; } // FK_EMPRESA
        public bool Removed { get; set; } // REMOVED

        // Reverse navigation

        /// <summary>
        /// Child Agenda where [AGENDA].[FK_CLASSIFICACAO] point to this entity (FK_AGENDA_CLASSIFICACAO_DE_LIGACAO)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<Agendum> Agenda { get; set; } // AGENDA.FK_AGENDA_CLASSIFICACAO_DE_LIGACAO

        // Foreign keys

        /// <summary>
        /// Parent Empresa pointed by [CLASSIFICACAO_DE_LIGACAO].([FkEmpresa]) (FK_CLASSIFICACAO_DE_LIGACAO_EMPRESA)
        /// </summary>
        public virtual Empresa Empresa { get; set; } // FK_CLASSIFICACAO_DE_LIGACAO_EMPRESA

        public ClassificacaoDeLigacao()
        {
            Removed = false;
            Agenda = new System.Collections.Generic.List<Agendum>();
        }
    }

    // CONTA
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.5.0")]
    public class Conta
    {
        public int Id { get; set; } // ID (Primary key)
        public string Codigo { get; set; } // CODIGO (length: 50)
        public string Cnpj { get; set; } // CNPJ (length: 50)
        public string RazaoSocial { get; set; } // RAZAO_SOCIAL (length: 200)
        public System.DateTime Vencimento { get; set; } // VENCIMENTO
        public int Prazo { get; set; } // PRAZO
        public System.DateTime InicioVigencia { get; set; } // INICIO_VIGENCIA
        public System.DateTime? FimVigencia { get; set; } // FIM_VIGENCIA
        public System.DateTime? PrimeiraFatura { get; set; } // PRIMEIRA_FATURA
        public System.DateTime? UltimaFatura { get; set; } // ULTIMA_FATURA
        public string Observacao { get; set; } // OBSERVACAO (length: 300)
        public int FkOperadora { get; set; } // FK_OPERADORA
        public int FkEmpresa { get; set; } // FK_EMPRESA
        public int FkTipoConta { get; set; } // FK_TIPO_CONTA

        // Reverse navigation

        /// <summary>
        /// Child LogImportacaos where [LOG_IMPORTACAO].[FK_CONTA] point to this entity (FK_LOG_IMPORTACAO_CONTA)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<LogImportacao> LogImportacaos { get; set; } // LOG_IMPORTACAO.FK_LOG_IMPORTACAO_CONTA
        /// <summary>
        /// Child NumeroLinhas where [NUMERO_LINHA].[FK_CONTA] point to this entity (FK_NUMERO_LINHA_CONTA)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<NumeroLinha> NumeroLinhas { get; set; } // NUMERO_LINHA.FK_NUMERO_LINHA_CONTA

        // Foreign keys

        /// <summary>
        /// Parent Empresa pointed by [CONTA].([FkEmpresa]) (FK_CONTA_EMPRESA)
        /// </summary>
        public virtual Empresa Empresa { get; set; } // FK_CONTA_EMPRESA

        /// <summary>
        /// Parent Operadora pointed by [CONTA].([FkOperadora]) (FK_CONTA_OPERADORA)
        /// </summary>
        public virtual Operadora Operadora { get; set; } // FK_CONTA_OPERADORA

        /// <summary>
        /// Parent TipoConta pointed by [CONTA].([FkTipoConta]) (FK_CONTA_TIPO_CONTA)
        /// </summary>
        public virtual TipoConta TipoConta { get; set; } // FK_CONTA_TIPO_CONTA

        public Conta()
        {
            LogImportacaos = new System.Collections.Generic.List<LogImportacao>();
            NumeroLinhas = new System.Collections.Generic.List<NumeroLinha>();
        }
    }

    // CONTA_PADRONIZADA
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.5.0")]
    public class ContaPadronizada
    {
        public int Id { get; set; } // ID (Primary key)
        public int FkNumeroLinha { get; set; } // FK_NUMERO_LINHA
        public int FkServico { get; set; } // FK_SERVICO
        public int? FkUf { get; set; } // FK_UF
        public int? FkFaixaDeHorario { get; set; } // FK_FAIXA_DE_HORARIO
        public System.DateTime MesReferencia { get; set; } // MES_REFERENCIA
        public System.DateTime Data { get; set; } // DATA
        public decimal? DuracaoQtd { get; set; } // DURACAO_QTD
        public decimal Valor { get; set; } // VALOR
        public int FkCcNivel { get; set; } // FK_CC_NIVEL
        public int FkCentroCusto { get; set; } // FK_CENTRO_CUSTO
        public int FkContato { get; set; } // FK_CONTATO
        public int FkEmpresa { get; set; } // FK_EMPRESA
        public string NumeroDestino { get; set; } // NUMERO_DESTINO (length: 50)
        public decimal? MinutosQtd { get; set; } // MINUTOS_QTD
        public decimal? DadosQtd { get; set; } // DADOS_QTD
        public string Horario { get; set; } // HORARIO (length: 10)

        // Foreign keys

        /// <summary>
        /// Parent FaixaDeHorario pointed by [CONTA_PADRONIZADA].([FkFaixaDeHorario]) (FK_CONTA_PADRONIZADA_FAIXA_DE_HORARIO)
        /// </summary>
        public virtual FaixaDeHorario FaixaDeHorario { get; set; } // FK_CONTA_PADRONIZADA_FAIXA_DE_HORARIO

        /// <summary>
        /// Parent NumeroLinha pointed by [CONTA_PADRONIZADA].([FkNumeroLinha]) (FK_CONTA_PADRONIZADA_NUMERO_LINHA)
        /// </summary>
        public virtual NumeroLinha NumeroLinha { get; set; } // FK_CONTA_PADRONIZADA_NUMERO_LINHA

        /// <summary>
        /// Parent Servico pointed by [CONTA_PADRONIZADA].([FkServico]) (FK_CONTA_PADRONIZADA_SERVICO)
        /// </summary>
        public virtual Servico Servico { get; set; } // FK_CONTA_PADRONIZADA_SERVICO

        /// <summary>
        /// Parent Uf pointed by [CONTA_PADRONIZADA].([FkUf]) (FK_CONTA_PADRONIZADA_UF)
        /// </summary>
        public virtual Uf Uf { get; set; } // FK_CONTA_PADRONIZADA_UF
    }

    // CONTATO
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.5.0")]
    public class Contato
    {
        public int Id { get; set; } // ID (Primary key)
        public string Nome { get; set; } // NOME (length: 50)
        public string Email { get; set; } // EMAIL (length: 50)
        public string Cpf { get; set; } // CPF (length: 11)
        public decimal? Limite { get; set; } // LIMITE
        public string Cargo { get; set; } // CARGO (length: 100)
        public string Matricula { get; set; } // MATRICULA (length: 30)
        public int? FkResponsavel { get; set; } // FK_RESPONSAVEL
        public int FkEmpresa { get; set; } // FK_EMPRESA

        // Reverse navigation

        /// <summary>
        /// Child Ativoes where [ATIVO].[FK_CONTATO] point to this entity (FK_ATIVO_CONTATO)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<Ativo> Ativoes { get; set; } // ATIVO.FK_ATIVO_CONTATO
        /// <summary>
        /// Child Contatoes where [CONTATO].[FK_RESPONSAVEL] point to this entity (FK_CONTATO_CONTATO)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<Contato> Contatoes { get; set; } // CONTATO.FK_CONTATO_CONTATO
        /// <summary>
        /// Child NumeroLinhas where [NUMERO_LINHA].[FK_CONTATO] point to this entity (FK_NUMERO_LINHA_CONTATO)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<NumeroLinha> NumeroLinhas { get; set; } // NUMERO_LINHA.FK_NUMERO_LINHA_CONTATO

        // Foreign keys

        /// <summary>
        /// Parent Contato pointed by [CONTATO].([FkResponsavel]) (FK_CONTATO_CONTATO)
        /// </summary>
        public virtual Contato Contato_FkResponsavel { get; set; } // FK_CONTATO_CONTATO

        /// <summary>
        /// Parent Empresa pointed by [CONTATO].([FkEmpresa]) (FK_CONTATO_EMPRESA)
        /// </summary>
        public virtual Empresa Empresa { get; set; } // FK_CONTATO_EMPRESA

        public Contato()
        {
            Ativoes = new System.Collections.Generic.List<Ativo>();
            Contatoes = new System.Collections.Generic.List<Contato>();
            NumeroLinhas = new System.Collections.Generic.List<NumeroLinha>();
        }
    }

    // EMPRESA
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.5.0")]
    public class Empresa
    {
        public int Id { get; set; } // ID (Primary key)
        public string Cnpj { get; set; } // CNPJ (length: 50)
        public string Nome { get; set; } // NOME (length: 200)
        public string RazaoSocial { get; set; } // RAZAO_SOCIAL (length: 200)
        public string InscricaoEstadual { get; set; } // INSCRICAO_ESTADUAL (length: 50)
        public string InscricaoMunicipal { get; set; } // INSCRICAO_MUNICIPAL (length: 50)
        public string Site { get; set; } // SITE (length: 50)
        public string Email { get; set; } // EMAIL (length: 50)
        public string AssinaturaEmail { get; set; } // ASSINATURA_EMAIL (length: 300)
        public string Cep { get; set; } // CEP (length: 9)
        public string Cidade { get; set; } // CIDADE (length: 200)
        public int FkEstado { get; set; } // FK_ESTADO
        public string Logradouro { get; set; } // LOGRADOURO (length: 200)
        public string Numero { get; set; } // NUMERO (length: 10)
        public string Complemento { get; set; } // COMPLEMENTO (length: 50)
        public string Bairro { get; set; } // BAIRRO (length: 200)
        public bool Status { get; set; } // STATUS
        public string Telefone { get; set; } // TELEFONE (length: 11)

        // Reverse navigation

        /// <summary>
        /// Child Agenda where [AGENDA].[FK_EMPRESA] point to this entity (FK_AGENDA_EMPRESA)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<Agendum> Agenda { get; set; } // AGENDA.FK_AGENDA_EMPRESA
        /// <summary>
        /// Child Ativoes where [ATIVO].[FK_EMPRESA] point to this entity (FK_ATIVO_EMPRESA)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<Ativo> Ativoes { get; set; } // ATIVO.FK_ATIVO_EMPRESA
        /// <summary>
        /// Child CentroCustoes where [CENTRO_CUSTO].[FK_EMPRESA] point to this entity (FK_CENTRO_CUSTO_EMPRESA)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<CentroCusto> CentroCustoes { get; set; } // CENTRO_CUSTO.FK_CENTRO_CUSTO_EMPRESA
        /// <summary>
        /// Child ClassificacaoDeLigacaos where [CLASSIFICACAO_DE_LIGACAO].[FK_EMPRESA] point to this entity (FK_CLASSIFICACAO_DE_LIGACAO_EMPRESA)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<ClassificacaoDeLigacao> ClassificacaoDeLigacaos { get; set; } // CLASSIFICACAO_DE_LIGACAO.FK_CLASSIFICACAO_DE_LIGACAO_EMPRESA
        /// <summary>
        /// Child Contas where [CONTA].[FK_EMPRESA] point to this entity (FK_CONTA_EMPRESA)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<Conta> Contas { get; set; } // CONTA.FK_CONTA_EMPRESA
        /// <summary>
        /// Child Contatoes where [CONTATO].[FK_EMPRESA] point to this entity (FK_CONTATO_EMPRESA)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<Contato> Contatoes { get; set; } // CONTATO.FK_CONTATO_EMPRESA
        /// <summary>
        /// Child Fabricantes where [FABRICANTE].[FK_EMPRESA] point to this entity (FK_FABRICANTE_EMPRESA)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<Fabricante> Fabricantes { get; set; } // FABRICANTE.FK_FABRICANTE_EMPRESA
        /// <summary>
        /// Child FaixaDeHorarios where [FAIXA_DE_HORARIO].[FK_EMPRESA] point to this entity (FK_FAIXA_DE_HORARIO_EMPRESA)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<FaixaDeHorario> FaixaDeHorarios { get; set; } // FAIXA_DE_HORARIO.FK_FAIXA_DE_HORARIO_EMPRESA
        /// <summary>
        /// Child NumeroLinhas where [NUMERO_LINHA].[FK_EMPRESA] point to this entity (FK_NUMERO_LINHA_EMPRESA)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<NumeroLinha> NumeroLinhas { get; set; } // NUMERO_LINHA.FK_NUMERO_LINHA_EMPRESA
        /// <summary>
        /// Child Perfils where [PERFIL].[FK_EMPRESA] point to this entity (FK_PERFIL_EMPRESA)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<Perfil> Perfils { get; set; } // PERFIL.FK_PERFIL_EMPRESA
        /// <summary>
        /// Child TemplateTermoEmails where [TEMPLATE_TERMO_EMAIL].[FK_EMPRESA] point to this entity (FK_TEMPLATE_TERMO_EMAIL_EMPRESA)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<TemplateTermoEmail> TemplateTermoEmails { get; set; } // TEMPLATE_TERMO_EMAIL.FK_TEMPLATE_TERMO_EMAIL_EMPRESA
        /// <summary>
        /// Child TipoAtivoes where [TIPO_ATIVO].[FK_EMPRESA] point to this entity (FK_TIPO_ATIVO_EMPRESA)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<TipoAtivo> TipoAtivoes { get; set; } // TIPO_ATIVO.FK_TIPO_ATIVO_EMPRESA
        /// <summary>
        /// Child Usuarios where [USUARIO].[FK_EMPRESA] point to this entity (FK_USUARIO_EMPRESA)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<Usuario> Usuarios { get; set; } // USUARIO.FK_USUARIO_EMPRESA

        // Foreign keys

        /// <summary>
        /// Parent Uf pointed by [EMPRESA].([FkEstado]) (FK_EMPRESA_UF)
        /// </summary>
        public virtual Uf Uf { get; set; } // FK_EMPRESA_UF

        public Empresa()
        {
            Status = false;
            Agenda = new System.Collections.Generic.List<Agendum>();
            Ativoes = new System.Collections.Generic.List<Ativo>();
            CentroCustoes = new System.Collections.Generic.List<CentroCusto>();
            ClassificacaoDeLigacaos = new System.Collections.Generic.List<ClassificacaoDeLigacao>();
            Contas = new System.Collections.Generic.List<Conta>();
            Contatoes = new System.Collections.Generic.List<Contato>();
            Fabricantes = new System.Collections.Generic.List<Fabricante>();
            FaixaDeHorarios = new System.Collections.Generic.List<FaixaDeHorario>();
            NumeroLinhas = new System.Collections.Generic.List<NumeroLinha>();
            Perfils = new System.Collections.Generic.List<Perfil>();
            TemplateTermoEmails = new System.Collections.Generic.List<TemplateTermoEmail>();
            TipoAtivoes = new System.Collections.Generic.List<TipoAtivo>();
            Usuarios = new System.Collections.Generic.List<Usuario>();
        }
    }

    // FABRICANTE
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.5.0")]
    public class Fabricante
    {
        public int Id { get; set; } // ID (Primary key)
        public string Nome { get; set; } // NOME (length: 50)
        public string Descricao { get; set; } // DESCRICAO (length: 50)
        public int FkEmpresa { get; set; } // FK_EMPRESA

        // Reverse navigation

        /// <summary>
        /// Child Ativoes where [ATIVO].[FK_FABRICANTE] point to this entity (FK_ATIVO_FABRICANTE)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<Ativo> Ativoes { get; set; } // ATIVO.FK_ATIVO_FABRICANTE

        // Foreign keys

        /// <summary>
        /// Parent Empresa pointed by [FABRICANTE].([FkEmpresa]) (FK_FABRICANTE_EMPRESA)
        /// </summary>
        public virtual Empresa Empresa { get; set; } // FK_FABRICANTE_EMPRESA

        public Fabricante()
        {
            FkEmpresa = 1;
            Ativoes = new System.Collections.Generic.List<Ativo>();
        }
    }

    // FAIXA_DE_HORARIO
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.5.0")]
    public class FaixaDeHorario
    {
        public int Id { get; set; } // ID (Primary key)
        public string Nome { get; set; } // NOME (length: 50)
        public System.DateTime Inicio { get; set; } // INICIO
        public System.DateTime Fim { get; set; } // FIM
        public int FkEmpresa { get; set; } // FK_EMPRESA

        // Reverse navigation

        /// <summary>
        /// Child ContaPadronizadas where [CONTA_PADRONIZADA].[FK_FAIXA_DE_HORARIO] point to this entity (FK_CONTA_PADRONIZADA_FAIXA_DE_HORARIO)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<ContaPadronizada> ContaPadronizadas { get; set; } // CONTA_PADRONIZADA.FK_CONTA_PADRONIZADA_FAIXA_DE_HORARIO

        // Foreign keys

        /// <summary>
        /// Parent Empresa pointed by [FAIXA_DE_HORARIO].([FkEmpresa]) (FK_FAIXA_DE_HORARIO_EMPRESA)
        /// </summary>
        public virtual Empresa Empresa { get; set; } // FK_FAIXA_DE_HORARIO_EMPRESA

        public FaixaDeHorario()
        {
            ContaPadronizadas = new System.Collections.Generic.List<ContaPadronizada>();
        }
    }

    // GRUPO_DE_SERVICO
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.5.0")]
    public class GrupoDeServico
    {
        public int Id { get; set; } // ID (Primary key)
        public string Nome { get; set; } // NOME (length: 100)
        public string Descricao { get; set; } // DESCRICAO (length: 100)
        public int Tipo { get; set; } // TIPO

        // Reverse navigation

        /// <summary>
        /// Child Servicoes where [SERVICO].[FK_GRUPO_DE_SERVICO] point to this entity (FK_SERVICO_GRUPO_DE_SERVICO)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<Servico> Servicoes { get; set; } // SERVICO.FK_SERVICO_GRUPO_DE_SERVICO

        public GrupoDeServico()
        {
            Servicoes = new System.Collections.Generic.List<Servico>();
        }
    }

    // LOG_IMPORTACAO
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.5.0")]
    public class LogImportacao
    {
        public int Id { get; set; } // ID (Primary key)
        public int QtdRegistros { get; set; } // QTD_REGISTROS
        public System.DateTime DataImportacao { get; set; } // DATA_IMPORTACAO
        public System.DateTime MesReferencia { get; set; } // MES_REFERENCIA
        public int QtdErros { get; set; } // QTD_ERROS
        public bool Aprovado { get; set; } // APROVADO
        public int FkConta { get; set; } // FK_CONTA

        // Reverse navigation

        /// <summary>
        /// Child RegistrosIncorretoes where [REGISTROS_INCORRETOS].[FK_LOG_IMPORTACAO] point to this entity (FK_REGISTROS_INCORRETOS_LOG_IMPORTACAO)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<RegistrosIncorreto> RegistrosIncorretoes { get; set; } // REGISTROS_INCORRETOS.FK_REGISTROS_INCORRETOS_LOG_IMPORTACAO

        // Foreign keys

        /// <summary>
        /// Parent Conta pointed by [LOG_IMPORTACAO].([FkConta]) (FK_LOG_IMPORTACAO_CONTA)
        /// </summary>
        public virtual Conta Conta { get; set; } // FK_LOG_IMPORTACAO_CONTA

        public LogImportacao()
        {
            RegistrosIncorretoes = new System.Collections.Generic.List<RegistrosIncorreto>();
        }
    }

    // NUMERO_LINHA
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.5.0")]
    public class NumeroLinha
    {
        public int Id { get; set; } // ID (Primary key)
        public string Numero { get; set; } // NUMERO (length: 50)
        public int FkContato { get; set; } // FK_CONTATO
        public int FkConta { get; set; } // FK_CONTA
        public int FkEmpresa { get; set; } // FK_EMPRESA
        public int FkCentroCusto { get; set; } // FK_CENTRO_CUSTO

        // Reverse navigation

        /// <summary>
        /// Child ContaPadronizadas where [CONTA_PADRONIZADA].[FK_NUMERO_LINHA] point to this entity (FK_CONTA_PADRONIZADA_NUMERO_LINHA)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<ContaPadronizada> ContaPadronizadas { get; set; } // CONTA_PADRONIZADA.FK_CONTA_PADRONIZADA_NUMERO_LINHA

        // Foreign keys

        /// <summary>
        /// Parent CentroCusto pointed by [NUMERO_LINHA].([FkCentroCusto]) (FK_NUMERO_LINHA_CENTRO_CUSTO)
        /// </summary>
        public virtual CentroCusto CentroCusto { get; set; } // FK_NUMERO_LINHA_CENTRO_CUSTO

        /// <summary>
        /// Parent Conta pointed by [NUMERO_LINHA].([FkConta]) (FK_NUMERO_LINHA_CONTA)
        /// </summary>
        public virtual Conta Conta { get; set; } // FK_NUMERO_LINHA_CONTA

        /// <summary>
        /// Parent Contato pointed by [NUMERO_LINHA].([FkContato]) (FK_NUMERO_LINHA_CONTATO)
        /// </summary>
        public virtual Contato Contato { get; set; } // FK_NUMERO_LINHA_CONTATO

        /// <summary>
        /// Parent Empresa pointed by [NUMERO_LINHA].([FkEmpresa]) (FK_NUMERO_LINHA_EMPRESA)
        /// </summary>
        public virtual Empresa Empresa { get; set; } // FK_NUMERO_LINHA_EMPRESA

        public NumeroLinha()
        {
            FkCentroCusto = 1;
            ContaPadronizadas = new System.Collections.Generic.List<ContaPadronizada>();
        }
    }

    // OPERADORA
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.5.0")]
    public class Operadora
    {
        public int Id { get; set; } // ID (Primary key)
        public string Nome { get; set; } // NOME (length: 50)

        // Reverse navigation

        /// <summary>
        /// Child Contas where [CONTA].[FK_OPERADORA] point to this entity (FK_CONTA_OPERADORA)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<Conta> Contas { get; set; } // CONTA.FK_CONTA_OPERADORA

        public Operadora()
        {
            Contas = new System.Collections.Generic.List<Conta>();
        }
    }

    // PAIS
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.5.0")]
    public class Pai
    {
        public int Id { get; set; } // ID (Primary key)
        public string Nome { get; set; } // NOME (length: 10)
        public string Codigo { get; set; } // CODIGO (length: 10)

        // Reverse navigation

        /// <summary>
        /// Child Ufs where [UF].[FK_PAIS] point to this entity (FK_UF_PAIS)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<Uf> Ufs { get; set; } // UF.FK_UF_PAIS

        public Pai()
        {
            Ufs = new System.Collections.Generic.List<Uf>();
        }
    }

    // PERFIL
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.5.0")]
    public class Perfil
    {
        public int Id { get; set; } // ID (Primary key)
        public string Nome { get; set; } // NOME (length: 100)
        public string Descricao { get; set; } // DESCRICAO (length: 150)
        public int FkEmpresa { get; set; } // FK_EMPRESA

        // Reverse navigation

        /// <summary>
        /// Child PerfilPermissaos where [PERFIL_PERMISSAO].[FK_PERFIL] point to this entity (FK_PERFIL_PERMISSAO_PERFIL)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<PerfilPermissao> PerfilPermissaos { get; set; } // PERFIL_PERMISSAO.FK_PERFIL_PERMISSAO_PERFIL
        /// <summary>
        /// Child Usuarios where [USUARIO].[FK_PERFIL] point to this entity (FK_USUARIO_PERFIL)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<Usuario> Usuarios { get; set; } // USUARIO.FK_USUARIO_PERFIL

        // Foreign keys

        /// <summary>
        /// Parent Empresa pointed by [PERFIL].([FkEmpresa]) (FK_PERFIL_EMPRESA)
        /// </summary>
        public virtual Empresa Empresa { get; set; } // FK_PERFIL_EMPRESA

        public Perfil()
        {
            FkEmpresa = 1;
            PerfilPermissaos = new System.Collections.Generic.List<PerfilPermissao>();
            Usuarios = new System.Collections.Generic.List<Usuario>();
        }
    }

    // PERFIL_PERMISSAO
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.5.0")]
    public class PerfilPermissao
    {
        public int Id { get; set; } // ID (Primary key)
        public int FkPerfil { get; set; } // FK_PERFIL
        public int FkPermissao { get; set; } // FK_PERMISSAO

        // Foreign keys

        /// <summary>
        /// Parent Perfil pointed by [PERFIL_PERMISSAO].([FkPerfil]) (FK_PERFIL_PERMISSAO_PERFIL)
        /// </summary>
        public virtual Perfil Perfil { get; set; } // FK_PERFIL_PERMISSAO_PERFIL

        /// <summary>
        /// Parent Permissao pointed by [PERFIL_PERMISSAO].([FkPermissao]) (FK_PERFIL_PERMISSAO_Permissao)
        /// </summary>
        public virtual Permissao Permissao { get; set; } // FK_PERFIL_PERMISSAO_Permissao
    }

    // PERMISSAO
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.5.0")]
    public class Permissao
    {
        public int Id { get; set; } // ID (Primary key)
        public string Nome { get; set; } // NOME (length: 100)

        // Reverse navigation

        /// <summary>
        /// Child PerfilPermissaos where [PERFIL_PERMISSAO].[FK_PERMISSAO] point to this entity (FK_PERFIL_PERMISSAO_Permissao)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<PerfilPermissao> PerfilPermissaos { get; set; } // PERFIL_PERMISSAO.FK_PERFIL_PERMISSAO_Permissao

        public Permissao()
        {
            PerfilPermissaos = new System.Collections.Generic.List<PerfilPermissao>();
        }
    }

    // PLANO
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.5.0")]
    public class Plano
    {
        public int Id { get; set; } // ID (Primary key)
        public string Nome { get; set; } // NOME (length: 50)
    }

    // REGISTROS_INCORRETOS
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.5.0")]
    public class RegistrosIncorreto
    {
        public int Id { get; set; } // ID (Primary key)
        public string Operadora { get; set; } // operadora (length: 50)
        public string TipoServico { get; set; } // tipoServico (length: 50)
        public string NumNf { get; set; } // numNf (length: 50)
        public string NumOrigem { get; set; } // numOrigem (length: 50)
        public string NumDestino { get; set; } // numDestino (length: 50)
        public string Mes { get; set; } // mes (length: 50)
        public string Data { get; set; } // data (length: 50)
        public string Codigo { get; set; } // codigo (length: 50)
        public string Grupo { get; set; } // grupo (length: 50)
        public string Codigo2 { get; set; } // codigo2 (length: 50)
        public string Servico { get; set; } // servico (length: 50)
        public string Duracao { get; set; } // duracao (length: 50)
        public string Min { get; set; } // min (length: 50)
        public string Dados { get; set; } // dados (length: 50)
        public string Horario { get; set; } // horario (length: 50)
        public string Cidade { get; set; } // cidade (length: 50)
        public string Regiao { get; set; } // regiao (length: 50)
        public string Estado { get; set; } // estado (length: 50)
        public string Pais { get; set; } // pais (length: 50)
        public string Valor { get; set; } // valor (length: 50)
        public string ValorCobrado { get; set; } // valorCobrado (length: 50)
        public string Degrau { get; set; } // degrau (length: 50)
        public string UfOrigem { get; set; } // ufOrigem (length: 50)
        public int FkLogImportacao { get; set; } // FK_LOG_IMPORTACAO

        // Foreign keys

        /// <summary>
        /// Parent LogImportacao pointed by [REGISTROS_INCORRETOS].([FkLogImportacao]) (FK_REGISTROS_INCORRETOS_LOG_IMPORTACAO)
        /// </summary>
        public virtual LogImportacao LogImportacao { get; set; } // FK_REGISTROS_INCORRETOS_LOG_IMPORTACAO
    }

    // SERVICO
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.5.0")]
    public class Servico
    {
        public int Id { get; set; } // ID (Primary key)
        public string Nome { get; set; } // NOME (length: 100)
        public string Descricao { get; set; } // DESCRICAO (length: 100)
        public int FkGrupoDeServico { get; set; } // FK_GRUPO_DE_SERVICO
        public int FkUnidadeDeMedida { get; set; } // FK_UNIDADE_DE_MEDIDA

        // Reverse navigation

        /// <summary>
        /// Child ContaPadronizadas where [CONTA_PADRONIZADA].[FK_SERVICO] point to this entity (FK_CONTA_PADRONIZADA_SERVICO)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<ContaPadronizada> ContaPadronizadas { get; set; } // CONTA_PADRONIZADA.FK_CONTA_PADRONIZADA_SERVICO

        // Foreign keys

        /// <summary>
        /// Parent GrupoDeServico pointed by [SERVICO].([FkGrupoDeServico]) (FK_SERVICO_GRUPO_DE_SERVICO)
        /// </summary>
        public virtual GrupoDeServico GrupoDeServico { get; set; } // FK_SERVICO_GRUPO_DE_SERVICO

        /// <summary>
        /// Parent UnidadeDeMedida pointed by [SERVICO].([FkUnidadeDeMedida]) (FK_SERVICO_UNIDADE_DE_MEDIDA)
        /// </summary>
        public virtual UnidadeDeMedida UnidadeDeMedida { get; set; } // FK_SERVICO_UNIDADE_DE_MEDIDA

        public Servico()
        {
            ContaPadronizadas = new System.Collections.Generic.List<ContaPadronizada>();
        }
    }

    // TEMPLATE_TERMO_EMAIL
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.5.0")]
    public class TemplateTermoEmail
    {
        public int Id { get; set; } // ID (Primary key)
        public int FkTipo { get; set; } // FK_TIPO
        public string Título { get; set; } // TÍTULO (length: 80)
        public string Email { get; set; } // EMAIL (length: 500)
        public int FkEmpresa { get; set; } // FK_EMPRESA

        // Foreign keys

        /// <summary>
        /// Parent Empresa pointed by [TEMPLATE_TERMO_EMAIL].([FkEmpresa]) (FK_TEMPLATE_TERMO_EMAIL_EMPRESA)
        /// </summary>
        public virtual Empresa Empresa { get; set; } // FK_TEMPLATE_TERMO_EMAIL_EMPRESA

        /// <summary>
        /// Parent TipoTermo pointed by [TEMPLATE_TERMO_EMAIL].([FkTipo]) (FK_TEMPLATE_TERMO_EMAIL_TIPO_TERMO)
        /// </summary>
        public virtual TipoTermo TipoTermo { get; set; } // FK_TEMPLATE_TERMO_EMAIL_TIPO_TERMO
    }

    // TIPO_ATIVO
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.5.0")]
    public class TipoAtivo
    {
        public int Id { get; set; } // ID (Primary key)
        public string Nome { get; set; } // NOME (length: 50)
        public int FkEmpresa { get; set; } // FK_EMPRESA

        // Reverse navigation

        /// <summary>
        /// Child Ativoes where [ATIVO].[FK_TIPO] point to this entity (FK_ATIVO_TIPO_ATIVO)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<Ativo> Ativoes { get; set; } // ATIVO.FK_ATIVO_TIPO_ATIVO

        // Foreign keys

        /// <summary>
        /// Parent Empresa pointed by [TIPO_ATIVO].([FkEmpresa]) (FK_TIPO_ATIVO_EMPRESA)
        /// </summary>
        public virtual Empresa Empresa { get; set; } // FK_TIPO_ATIVO_EMPRESA

        public TipoAtivo()
        {
            Ativoes = new System.Collections.Generic.List<Ativo>();
        }
    }

    // TIPO_CONTA
    ///<summary>
    /// Fixa, Movel, 0800, Dados
    ///</summary>
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.5.0")]
    public class TipoConta
    {
        public int Id { get; set; } // ID (Primary key)
        public string Nome { get; set; } // NOME (length: 50)

        // Reverse navigation

        /// <summary>
        /// Child Contas where [CONTA].[FK_TIPO_CONTA] point to this entity (FK_CONTA_TIPO_CONTA)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<Conta> Contas { get; set; } // CONTA.FK_CONTA_TIPO_CONTA

        public TipoConta()
        {
            Contas = new System.Collections.Generic.List<Conta>();
        }
    }

    // TIPO_TERMO
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.5.0")]
    public class TipoTermo
    {
        public int Id { get; set; } // ID (Primary key)
        public string Nome { get; set; } // NOME (length: 50)

        // Reverse navigation

        /// <summary>
        /// Child TemplateTermoEmails where [TEMPLATE_TERMO_EMAIL].[FK_TIPO] point to this entity (FK_TEMPLATE_TERMO_EMAIL_TIPO_TERMO)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<TemplateTermoEmail> TemplateTermoEmails { get; set; } // TEMPLATE_TERMO_EMAIL.FK_TEMPLATE_TERMO_EMAIL_TIPO_TERMO

        public TipoTermo()
        {
            TemplateTermoEmails = new System.Collections.Generic.List<TemplateTermoEmail>();
        }
    }

    // UF
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.5.0")]
    public class Uf
    {
        public int Id { get; set; } // ID (Primary key)
        public string Nome { get; set; } // NOME (length: 50)
        public string Sigla { get; set; } // SIGLA (length: 10)
        public int FkPais { get; set; } // FK_PAIS
        public int Ddd { get; set; } // DDD

        // Reverse navigation

        /// <summary>
        /// Child ContaPadronizadas where [CONTA_PADRONIZADA].[FK_UF] point to this entity (FK_CONTA_PADRONIZADA_UF)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<ContaPadronizada> ContaPadronizadas { get; set; } // CONTA_PADRONIZADA.FK_CONTA_PADRONIZADA_UF
        /// <summary>
        /// Child Empresas where [EMPRESA].[FK_ESTADO] point to this entity (FK_EMPRESA_UF)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<Empresa> Empresas { get; set; } // EMPRESA.FK_EMPRESA_UF

        // Foreign keys

        /// <summary>
        /// Parent Pai pointed by [UF].([FkPais]) (FK_UF_PAIS)
        /// </summary>
        public virtual Pai Pai { get; set; } // FK_UF_PAIS

        public Uf()
        {
            Sigla = "NO";
            ContaPadronizadas = new System.Collections.Generic.List<ContaPadronizada>();
            Empresas = new System.Collections.Generic.List<Empresa>();
        }
    }

    // UNIDADE_DE_MEDIDA
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.5.0")]
    public class UnidadeDeMedida
    {
        public int Id { get; set; } // ID (Primary key)
        public string Nome { get; set; } // NOME (length: 100)
        public string Descricao { get; set; } // DESCRICAO (length: 100)
        public string Simbolo { get; set; } // SIMBOLO (length: 10)

        // Reverse navigation

        /// <summary>
        /// Child Servicoes where [SERVICO].[FK_UNIDADE_DE_MEDIDA] point to this entity (FK_SERVICO_UNIDADE_DE_MEDIDA)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<Servico> Servicoes { get; set; } // SERVICO.FK_SERVICO_UNIDADE_DE_MEDIDA

        public UnidadeDeMedida()
        {
            Servicoes = new System.Collections.Generic.List<Servico>();
        }
    }

    // USUARIO
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.5.0")]
    public class Usuario
    {
        public int Id { get; set; } // ID (Primary key)
        public string Nome { get; set; } // NOME (length: 150)
        public string Login { get; set; } // LOGIN (length: 100)
        public string Email { get; set; } // EMAIL (length: 100)
        public string Cpf { get; set; } // CPF (length: 11)
        public int FkPerfil { get; set; } // FK_PERFIL
        public string Senha { get; set; } // SENHA (length: 200)
        public int FkEmpresa { get; set; } // FK_EMPRESA
        public System.DateTime? CreateAt { get; set; } // CREATE_AT
        public int? UserCreate { get; set; } // USER_CREATE
        public System.DateTime? UpdateAt { get; set; } // UPDATE_AT
        public int? UserUpdate { get; set; } // USER_UPDATE
        public bool Status { get; set; } // STATUS
        public bool Removed { get; set; } // REMOVED

        // Foreign keys

        /// <summary>
        /// Parent Empresa pointed by [USUARIO].([FkEmpresa]) (FK_USUARIO_EMPRESA)
        /// </summary>
        public virtual Empresa Empresa { get; set; } // FK_USUARIO_EMPRESA

        /// <summary>
        /// Parent Perfil pointed by [USUARIO].([FkPerfil]) (FK_USUARIO_PERFIL)
        /// </summary>
        public virtual Perfil Perfil { get; set; } // FK_USUARIO_PERFIL

        public Usuario()
        {
            Removed = false;
        }
    }

    #endregion

    #region POCO Configuration

    // AGENDA
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.5.0")]
    public class AgendumConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<Agendum>
    {
        public AgendumConfiguration()
            : this("dbo")
        {
        }

        public AgendumConfiguration(string schema)
        {
            ToTable("AGENDA", schema);
            HasKey(x => x.Id);

            Property(x => x.Id).HasColumnName(@"ID").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.Nome).HasColumnName(@"NOME").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(100);
            Property(x => x.Telefone).HasColumnName(@"TELEFONE").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(50);
            Property(x => x.Individual).HasColumnName(@"INDIVIDUAL").HasColumnType("bit").IsRequired();
            Property(x => x.FkClassificacao).HasColumnName(@"FK_CLASSIFICACAO").HasColumnType("int").IsRequired();
            Property(x => x.FkEmpresa).HasColumnName(@"FK_EMPRESA").HasColumnType("int").IsRequired();
            Property(x => x.Removed).HasColumnName(@"REMOVED").HasColumnType("bit").IsRequired();

            // Foreign keys
            HasRequired(a => a.ClassificacaoDeLigacao).WithMany(b => b.Agenda).HasForeignKey(c => c.FkClassificacao).WillCascadeOnDelete(false); // FK_AGENDA_CLASSIFICACAO_DE_LIGACAO
            HasRequired(a => a.Empresa).WithMany(b => b.Agenda).HasForeignKey(c => c.FkEmpresa).WillCascadeOnDelete(false); // FK_AGENDA_EMPRESA
        }
    }

    // ATIVO
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.5.0")]
    public class AtivoConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<Ativo>
    {
        public AtivoConfiguration()
            : this("dbo")
        {
        }

        public AtivoConfiguration(string schema)
        {
            ToTable("ATIVO", schema);
            HasKey(x => x.Id);

            Property(x => x.Id).HasColumnName(@"ID").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.Identificador).HasColumnName(@"IDENTIFICADOR").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(100);
            Property(x => x.Modelo).HasColumnName(@"MODELO").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(50);
            Property(x => x.DataAquisicao).HasColumnName(@"DATA_AQUISICAO").HasColumnType("datetime").IsRequired();
            Property(x => x.Status).HasColumnName(@"STATUS").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(50);
            Property(x => x.ContatoNumero).HasColumnName(@"CONTATO_NUMERO").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(50);
            Property(x => x.ContatoCc).HasColumnName(@"CONTATO_CC").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(50);
            Property(x => x.ContatoNome).HasColumnName(@"CONTATO_NOME").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(50);
            Property(x => x.NfNumero).HasColumnName(@"NF_NUMERO").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(50);
            Property(x => x.NfSerie).HasColumnName(@"NF_SERIE").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(50);
            Property(x => x.NfData).HasColumnName(@"NF_DATA").HasColumnType("datetime").IsOptional();
            Property(x => x.NfCnpj).HasColumnName(@"NF_CNPJ").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(50);
            Property(x => x.NfRazaoSocial).HasColumnName(@"NF_RAZAO_SOCIAL").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(150);
            Property(x => x.FkFabricante).HasColumnName(@"FK_FABRICANTE").HasColumnType("int").IsRequired();
            Property(x => x.FkTipo).HasColumnName(@"FK_TIPO").HasColumnType("int").IsRequired();
            Property(x => x.FkContato).HasColumnName(@"FK_CONTATO").HasColumnType("int").IsRequired();
            Property(x => x.FkNumeroLinha).HasColumnName(@"FK_NUMERO_LINHA").HasColumnType("int").IsRequired();
            Property(x => x.FkEmpresa).HasColumnName(@"FK_EMPRESA").HasColumnType("int").IsRequired();

            // Foreign keys
            HasRequired(a => a.Contato).WithMany(b => b.Ativoes).HasForeignKey(c => c.FkContato).WillCascadeOnDelete(false); // FK_ATIVO_CONTATO
            HasRequired(a => a.Empresa).WithMany(b => b.Ativoes).HasForeignKey(c => c.FkEmpresa).WillCascadeOnDelete(false); // FK_ATIVO_EMPRESA
            HasRequired(a => a.Fabricante).WithMany(b => b.Ativoes).HasForeignKey(c => c.FkFabricante).WillCascadeOnDelete(false); // FK_ATIVO_FABRICANTE
            HasRequired(a => a.TipoAtivo).WithMany(b => b.Ativoes).HasForeignKey(c => c.FkTipo).WillCascadeOnDelete(false); // FK_ATIVO_TIPO_ATIVO
        }
    }

    // CC_NIVEL
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.5.0")]
    public class CcNivelConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<CcNivel>
    {
        public CcNivelConfiguration()
            : this("dbo")
        {
        }

        public CcNivelConfiguration(string schema)
        {
            ToTable("CC_NIVEL", schema);
            HasKey(x => x.Id);

            Property(x => x.Id).HasColumnName(@"ID").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.Indice).HasColumnName(@"INDICE").HasColumnType("int").IsRequired();
            Property(x => x.Nome).HasColumnName(@"NOME").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(100);
            Property(x => x.FkEmpresa).HasColumnName(@"FK_EMPRESA").HasColumnType("int").IsRequired();
        }
    }

    // CENTRO_CUSTO
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.5.0")]
    public class CentroCustoConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<CentroCusto>
    {
        public CentroCustoConfiguration()
            : this("dbo")
        {
        }

        public CentroCustoConfiguration(string schema)
        {
            ToTable("CENTRO_CUSTO", schema);
            HasKey(x => x.Id);

            Property(x => x.Id).HasColumnName(@"ID").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.Nome).HasColumnName(@"NOME").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(50);
            Property(x => x.Classificacao).HasColumnName(@"CLASSIFICACAO").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(50);
            Property(x => x.FkEmpresa).HasColumnName(@"FK_EMPRESA").HasColumnType("int").IsRequired();
            Property(x => x.FkPai).HasColumnName(@"FK_PAI").HasColumnType("int").IsOptional();
            Property(x => x.Removed).HasColumnName(@"REMOVED").HasColumnType("bit").IsRequired();

            // Foreign keys
            HasOptional(a => a.CentroCusto_FkPai).WithMany(b => b.CentroCustoes).HasForeignKey(c => c.FkPai).WillCascadeOnDelete(false); // FK_CENTRO_CUSTO_CENTRO_CUSTO
            HasRequired(a => a.Empresa).WithMany(b => b.CentroCustoes).HasForeignKey(c => c.FkEmpresa).WillCascadeOnDelete(false); // FK_CENTRO_CUSTO_EMPRESA
        }
    }

    // CLASSIFICACAO_DE_LIGACAO
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.5.0")]
    public class ClassificacaoDeLigacaoConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<ClassificacaoDeLigacao>
    {
        public ClassificacaoDeLigacaoConfiguration()
            : this("dbo")
        {
        }

        public ClassificacaoDeLigacaoConfiguration(string schema)
        {
            ToTable("CLASSIFICACAO_DE_LIGACAO", schema);
            HasKey(x => x.Id);

            Property(x => x.Id).HasColumnName(@"ID").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.Nome).HasColumnName(@"NOME").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(50);
            Property(x => x.Descricao).HasColumnName(@"DESCRICAO").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(50);
            Property(x => x.Intragrupo).HasColumnName(@"INTRAGRUPO").HasColumnType("bit").IsRequired();
            Property(x => x.FkEmpresa).HasColumnName(@"FK_EMPRESA").HasColumnType("int").IsRequired();
            Property(x => x.Removed).HasColumnName(@"REMOVED").HasColumnType("bit").IsRequired();

            // Foreign keys
            HasRequired(a => a.Empresa).WithMany(b => b.ClassificacaoDeLigacaos).HasForeignKey(c => c.FkEmpresa).WillCascadeOnDelete(false); // FK_CLASSIFICACAO_DE_LIGACAO_EMPRESA
        }
    }

    // CONTA
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.5.0")]
    public class ContaConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<Conta>
    {
        public ContaConfiguration()
            : this("dbo")
        {
        }

        public ContaConfiguration(string schema)
        {
            ToTable("CONTA", schema);
            HasKey(x => x.Id);

            Property(x => x.Id).HasColumnName(@"ID").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.Codigo).HasColumnName(@"CODIGO").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(50);
            Property(x => x.Cnpj).HasColumnName(@"CNPJ").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(50);
            Property(x => x.RazaoSocial).HasColumnName(@"RAZAO_SOCIAL").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(200);
            Property(x => x.Vencimento).HasColumnName(@"VENCIMENTO").HasColumnType("datetime").IsRequired();
            Property(x => x.Prazo).HasColumnName(@"PRAZO").HasColumnType("int").IsRequired();
            Property(x => x.InicioVigencia).HasColumnName(@"INICIO_VIGENCIA").HasColumnType("datetime").IsRequired();
            Property(x => x.FimVigencia).HasColumnName(@"FIM_VIGENCIA").HasColumnType("datetime").IsOptional();
            Property(x => x.PrimeiraFatura).HasColumnName(@"PRIMEIRA_FATURA").HasColumnType("datetime").IsOptional();
            Property(x => x.UltimaFatura).HasColumnName(@"ULTIMA_FATURA").HasColumnType("datetime").IsOptional();
            Property(x => x.Observacao).HasColumnName(@"OBSERVACAO").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(300);
            Property(x => x.FkOperadora).HasColumnName(@"FK_OPERADORA").HasColumnType("int").IsRequired();
            Property(x => x.FkEmpresa).HasColumnName(@"FK_EMPRESA").HasColumnType("int").IsRequired();
            Property(x => x.FkTipoConta).HasColumnName(@"FK_TIPO_CONTA").HasColumnType("int").IsRequired();

            // Foreign keys
            HasRequired(a => a.Empresa).WithMany(b => b.Contas).HasForeignKey(c => c.FkEmpresa).WillCascadeOnDelete(false); // FK_CONTA_EMPRESA
            HasRequired(a => a.Operadora).WithMany(b => b.Contas).HasForeignKey(c => c.FkOperadora).WillCascadeOnDelete(false); // FK_CONTA_OPERADORA
            HasRequired(a => a.TipoConta).WithMany(b => b.Contas).HasForeignKey(c => c.FkTipoConta).WillCascadeOnDelete(false); // FK_CONTA_TIPO_CONTA
        }
    }

    // CONTA_PADRONIZADA
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.5.0")]
    public class ContaPadronizadaConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<ContaPadronizada>
    {
        public ContaPadronizadaConfiguration()
            : this("dbo")
        {
        }

        public ContaPadronizadaConfiguration(string schema)
        {
            ToTable("CONTA_PADRONIZADA", schema);
            HasKey(x => x.Id);

            Property(x => x.Id).HasColumnName(@"ID").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.FkNumeroLinha).HasColumnName(@"FK_NUMERO_LINHA").HasColumnType("int").IsRequired();
            Property(x => x.FkServico).HasColumnName(@"FK_SERVICO").HasColumnType("int").IsRequired();
            Property(x => x.FkUf).HasColumnName(@"FK_UF").HasColumnType("int").IsOptional();
            Property(x => x.FkFaixaDeHorario).HasColumnName(@"FK_FAIXA_DE_HORARIO").HasColumnType("int").IsOptional();
            Property(x => x.MesReferencia).HasColumnName(@"MES_REFERENCIA").HasColumnType("datetime").IsRequired();
            Property(x => x.Data).HasColumnName(@"DATA").HasColumnType("datetime").IsRequired();
            Property(x => x.DuracaoQtd).HasColumnName(@"DURACAO_QTD").HasColumnType("decimal").IsOptional().HasPrecision(18,5);
            Property(x => x.Valor).HasColumnName(@"VALOR").HasColumnType("decimal").IsRequired().HasPrecision(18,5);
            Property(x => x.FkCcNivel).HasColumnName(@"FK_CC_NIVEL").HasColumnType("int").IsRequired();
            Property(x => x.FkCentroCusto).HasColumnName(@"FK_CENTRO_CUSTO").HasColumnType("int").IsRequired();
            Property(x => x.FkContato).HasColumnName(@"FK_CONTATO").HasColumnType("int").IsRequired();
            Property(x => x.FkEmpresa).HasColumnName(@"FK_EMPRESA").HasColumnType("int").IsRequired();
            Property(x => x.NumeroDestino).HasColumnName(@"NUMERO_DESTINO").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(50);
            Property(x => x.MinutosQtd).HasColumnName(@"MINUTOS_QTD").HasColumnType("decimal").IsOptional().HasPrecision(18,2);
            Property(x => x.DadosQtd).HasColumnName(@"DADOS_QTD").HasColumnType("decimal").IsOptional().HasPrecision(18,5);
            Property(x => x.Horario).HasColumnName(@"HORARIO").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(10);

            // Foreign keys
            HasOptional(a => a.FaixaDeHorario).WithMany(b => b.ContaPadronizadas).HasForeignKey(c => c.FkFaixaDeHorario).WillCascadeOnDelete(false); // FK_CONTA_PADRONIZADA_FAIXA_DE_HORARIO
            HasOptional(a => a.Uf).WithMany(b => b.ContaPadronizadas).HasForeignKey(c => c.FkUf).WillCascadeOnDelete(false); // FK_CONTA_PADRONIZADA_UF
            HasRequired(a => a.NumeroLinha).WithMany(b => b.ContaPadronizadas).HasForeignKey(c => c.FkNumeroLinha).WillCascadeOnDelete(false); // FK_CONTA_PADRONIZADA_NUMERO_LINHA
            HasRequired(a => a.Servico).WithMany(b => b.ContaPadronizadas).HasForeignKey(c => c.FkServico).WillCascadeOnDelete(false); // FK_CONTA_PADRONIZADA_SERVICO
        }
    }

    // CONTATO
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.5.0")]
    public class ContatoConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<Contato>
    {
        public ContatoConfiguration()
            : this("dbo")
        {
        }

        public ContatoConfiguration(string schema)
        {
            ToTable("CONTATO", schema);
            HasKey(x => x.Id);

            Property(x => x.Id).HasColumnName(@"ID").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.Nome).HasColumnName(@"NOME").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(50);
            Property(x => x.Email).HasColumnName(@"EMAIL").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(50);
            Property(x => x.Cpf).HasColumnName(@"CPF").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(11);
            Property(x => x.Limite).HasColumnName(@"LIMITE").HasColumnType("decimal").IsOptional().HasPrecision(18,0);
            Property(x => x.Cargo).HasColumnName(@"CARGO").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(100);
            Property(x => x.Matricula).HasColumnName(@"MATRICULA").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(30);
            Property(x => x.FkResponsavel).HasColumnName(@"FK_RESPONSAVEL").HasColumnType("int").IsOptional();
            Property(x => x.FkEmpresa).HasColumnName(@"FK_EMPRESA").HasColumnType("int").IsRequired();

            // Foreign keys
            HasOptional(a => a.Contato_FkResponsavel).WithMany(b => b.Contatoes).HasForeignKey(c => c.FkResponsavel).WillCascadeOnDelete(false); // FK_CONTATO_CONTATO
            HasRequired(a => a.Empresa).WithMany(b => b.Contatoes).HasForeignKey(c => c.FkEmpresa).WillCascadeOnDelete(false); // FK_CONTATO_EMPRESA
        }
    }

    // EMPRESA
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.5.0")]
    public class EmpresaConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<Empresa>
    {
        public EmpresaConfiguration()
            : this("dbo")
        {
        }

        public EmpresaConfiguration(string schema)
        {
            ToTable("EMPRESA", schema);
            HasKey(x => x.Id);

            Property(x => x.Id).HasColumnName(@"ID").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.Cnpj).HasColumnName(@"CNPJ").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(50);
            Property(x => x.Nome).HasColumnName(@"NOME").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(200);
            Property(x => x.RazaoSocial).HasColumnName(@"RAZAO_SOCIAL").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(200);
            Property(x => x.InscricaoEstadual).HasColumnName(@"INSCRICAO_ESTADUAL").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(50);
            Property(x => x.InscricaoMunicipal).HasColumnName(@"INSCRICAO_MUNICIPAL").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(50);
            Property(x => x.Site).HasColumnName(@"SITE").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(50);
            Property(x => x.Email).HasColumnName(@"EMAIL").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(50);
            Property(x => x.AssinaturaEmail).HasColumnName(@"ASSINATURA_EMAIL").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(300);
            Property(x => x.Cep).HasColumnName(@"CEP").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(9);
            Property(x => x.Cidade).HasColumnName(@"CIDADE").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(200);
            Property(x => x.FkEstado).HasColumnName(@"FK_ESTADO").HasColumnType("int").IsRequired();
            Property(x => x.Logradouro).HasColumnName(@"LOGRADOURO").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(200);
            Property(x => x.Numero).HasColumnName(@"NUMERO").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(10);
            Property(x => x.Complemento).HasColumnName(@"COMPLEMENTO").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(50);
            Property(x => x.Bairro).HasColumnName(@"BAIRRO").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(200);
            Property(x => x.Status).HasColumnName(@"STATUS").HasColumnType("bit").IsRequired();
            Property(x => x.Telefone).HasColumnName(@"TELEFONE").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(11);

            // Foreign keys
            HasRequired(a => a.Uf).WithMany(b => b.Empresas).HasForeignKey(c => c.FkEstado).WillCascadeOnDelete(false); // FK_EMPRESA_UF
        }
    }

    // FABRICANTE
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.5.0")]
    public class FabricanteConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<Fabricante>
    {
        public FabricanteConfiguration()
            : this("dbo")
        {
        }

        public FabricanteConfiguration(string schema)
        {
            ToTable("FABRICANTE", schema);
            HasKey(x => x.Id);

            Property(x => x.Id).HasColumnName(@"ID").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.Nome).HasColumnName(@"NOME").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(50);
            Property(x => x.Descricao).HasColumnName(@"DESCRICAO").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(50);
            Property(x => x.FkEmpresa).HasColumnName(@"FK_EMPRESA").HasColumnType("int").IsRequired();

            // Foreign keys
            HasRequired(a => a.Empresa).WithMany(b => b.Fabricantes).HasForeignKey(c => c.FkEmpresa).WillCascadeOnDelete(false); // FK_FABRICANTE_EMPRESA
        }
    }

    // FAIXA_DE_HORARIO
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.5.0")]
    public class FaixaDeHorarioConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<FaixaDeHorario>
    {
        public FaixaDeHorarioConfiguration()
            : this("dbo")
        {
        }

        public FaixaDeHorarioConfiguration(string schema)
        {
            ToTable("FAIXA_DE_HORARIO", schema);
            HasKey(x => x.Id);

            Property(x => x.Id).HasColumnName(@"ID").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.Nome).HasColumnName(@"NOME").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(50);
            Property(x => x.Inicio).HasColumnName(@"INICIO").HasColumnType("datetime").IsRequired();
            Property(x => x.Fim).HasColumnName(@"FIM").HasColumnType("datetime").IsRequired();
            Property(x => x.FkEmpresa).HasColumnName(@"FK_EMPRESA").HasColumnType("int").IsRequired();

            // Foreign keys
            HasRequired(a => a.Empresa).WithMany(b => b.FaixaDeHorarios).HasForeignKey(c => c.FkEmpresa).WillCascadeOnDelete(false); // FK_FAIXA_DE_HORARIO_EMPRESA
        }
    }

    // GRUPO_DE_SERVICO
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.5.0")]
    public class GrupoDeServicoConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<GrupoDeServico>
    {
        public GrupoDeServicoConfiguration()
            : this("dbo")
        {
        }

        public GrupoDeServicoConfiguration(string schema)
        {
            ToTable("GRUPO_DE_SERVICO", schema);
            HasKey(x => x.Id);

            Property(x => x.Id).HasColumnName(@"ID").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.Nome).HasColumnName(@"NOME").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(100);
            Property(x => x.Descricao).HasColumnName(@"DESCRICAO").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(100);
            Property(x => x.Tipo).HasColumnName(@"TIPO").HasColumnType("int").IsRequired();
        }
    }

    // LOG_IMPORTACAO
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.5.0")]
    public class LogImportacaoConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<LogImportacao>
    {
        public LogImportacaoConfiguration()
            : this("dbo")
        {
        }

        public LogImportacaoConfiguration(string schema)
        {
            ToTable("LOG_IMPORTACAO", schema);
            HasKey(x => x.Id);

            Property(x => x.Id).HasColumnName(@"ID").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.QtdRegistros).HasColumnName(@"QTD_REGISTROS").HasColumnType("int").IsRequired();
            Property(x => x.DataImportacao).HasColumnName(@"DATA_IMPORTACAO").HasColumnType("datetime").IsRequired();
            Property(x => x.MesReferencia).HasColumnName(@"MES_REFERENCIA").HasColumnType("datetime").IsRequired();
            Property(x => x.QtdErros).HasColumnName(@"QTD_ERROS").HasColumnType("int").IsRequired();
            Property(x => x.Aprovado).HasColumnName(@"APROVADO").HasColumnType("bit").IsRequired();
            Property(x => x.FkConta).HasColumnName(@"FK_CONTA").HasColumnType("int").IsRequired();

            // Foreign keys
            HasRequired(a => a.Conta).WithMany(b => b.LogImportacaos).HasForeignKey(c => c.FkConta).WillCascadeOnDelete(false); // FK_LOG_IMPORTACAO_CONTA
        }
    }

    // NUMERO_LINHA
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.5.0")]
    public class NumeroLinhaConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<NumeroLinha>
    {
        public NumeroLinhaConfiguration()
            : this("dbo")
        {
        }

        public NumeroLinhaConfiguration(string schema)
        {
            ToTable("NUMERO_LINHA", schema);
            HasKey(x => x.Id);

            Property(x => x.Id).HasColumnName(@"ID").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.Numero).HasColumnName(@"NUMERO").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(50);
            Property(x => x.FkContato).HasColumnName(@"FK_CONTATO").HasColumnType("int").IsRequired();
            Property(x => x.FkConta).HasColumnName(@"FK_CONTA").HasColumnType("int").IsRequired();
            Property(x => x.FkEmpresa).HasColumnName(@"FK_EMPRESA").HasColumnType("int").IsRequired();
            Property(x => x.FkCentroCusto).HasColumnName(@"FK_CENTRO_CUSTO").HasColumnType("int").IsRequired();

            // Foreign keys
            HasRequired(a => a.CentroCusto).WithMany(b => b.NumeroLinhas).HasForeignKey(c => c.FkCentroCusto).WillCascadeOnDelete(false); // FK_NUMERO_LINHA_CENTRO_CUSTO
            HasRequired(a => a.Conta).WithMany(b => b.NumeroLinhas).HasForeignKey(c => c.FkConta).WillCascadeOnDelete(false); // FK_NUMERO_LINHA_CONTA
            HasRequired(a => a.Contato).WithMany(b => b.NumeroLinhas).HasForeignKey(c => c.FkContato).WillCascadeOnDelete(false); // FK_NUMERO_LINHA_CONTATO
            HasRequired(a => a.Empresa).WithMany(b => b.NumeroLinhas).HasForeignKey(c => c.FkEmpresa).WillCascadeOnDelete(false); // FK_NUMERO_LINHA_EMPRESA
        }
    }

    // OPERADORA
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.5.0")]
    public class OperadoraConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<Operadora>
    {
        public OperadoraConfiguration()
            : this("dbo")
        {
        }

        public OperadoraConfiguration(string schema)
        {
            ToTable("OPERADORA", schema);
            HasKey(x => x.Id);

            Property(x => x.Id).HasColumnName(@"ID").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.Nome).HasColumnName(@"NOME").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(50);
        }
    }

    // PAIS
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.5.0")]
    public class PaiConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<Pai>
    {
        public PaiConfiguration()
            : this("dbo")
        {
        }

        public PaiConfiguration(string schema)
        {
            ToTable("PAIS", schema);
            HasKey(x => x.Id);

            Property(x => x.Id).HasColumnName(@"ID").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.Nome).HasColumnName(@"NOME").HasColumnType("nchar").IsRequired().IsFixedLength().HasMaxLength(10);
            Property(x => x.Codigo).HasColumnName(@"CODIGO").HasColumnType("nchar").IsRequired().IsFixedLength().HasMaxLength(10);
        }
    }

    // PERFIL
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.5.0")]
    public class PerfilConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<Perfil>
    {
        public PerfilConfiguration()
            : this("dbo")
        {
        }

        public PerfilConfiguration(string schema)
        {
            ToTable("PERFIL", schema);
            HasKey(x => x.Id);

            Property(x => x.Id).HasColumnName(@"ID").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.Nome).HasColumnName(@"NOME").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(100);
            Property(x => x.Descricao).HasColumnName(@"DESCRICAO").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(150);
            Property(x => x.FkEmpresa).HasColumnName(@"FK_EMPRESA").HasColumnType("int").IsRequired();

            // Foreign keys
            HasRequired(a => a.Empresa).WithMany(b => b.Perfils).HasForeignKey(c => c.FkEmpresa).WillCascadeOnDelete(false); // FK_PERFIL_EMPRESA
        }
    }

    // PERFIL_PERMISSAO
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.5.0")]
    public class PerfilPermissaoConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<PerfilPermissao>
    {
        public PerfilPermissaoConfiguration()
            : this("dbo")
        {
        }

        public PerfilPermissaoConfiguration(string schema)
        {
            ToTable("PERFIL_PERMISSAO", schema);
            HasKey(x => x.Id);

            Property(x => x.Id).HasColumnName(@"ID").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.FkPerfil).HasColumnName(@"FK_PERFIL").HasColumnType("int").IsRequired();
            Property(x => x.FkPermissao).HasColumnName(@"FK_PERMISSAO").HasColumnType("int").IsRequired();

            // Foreign keys
            HasRequired(a => a.Perfil).WithMany(b => b.PerfilPermissaos).HasForeignKey(c => c.FkPerfil).WillCascadeOnDelete(false); // FK_PERFIL_PERMISSAO_PERFIL
            HasRequired(a => a.Permissao).WithMany(b => b.PerfilPermissaos).HasForeignKey(c => c.FkPermissao).WillCascadeOnDelete(false); // FK_PERFIL_PERMISSAO_Permissao
        }
    }

    // PERMISSAO
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.5.0")]
    public class PermissaoConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<Permissao>
    {
        public PermissaoConfiguration()
            : this("dbo")
        {
        }

        public PermissaoConfiguration(string schema)
        {
            ToTable("PERMISSAO", schema);
            HasKey(x => x.Id);

            Property(x => x.Id).HasColumnName(@"ID").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.Nome).HasColumnName(@"NOME").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(100);
        }
    }

    // PLANO
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.5.0")]
    public class PlanoConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<Plano>
    {
        public PlanoConfiguration()
            : this("dbo")
        {
        }

        public PlanoConfiguration(string schema)
        {
            ToTable("PLANO", schema);
            HasKey(x => x.Id);

            Property(x => x.Id).HasColumnName(@"ID").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.Nome).HasColumnName(@"NOME").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(50);
        }
    }

    // REGISTROS_INCORRETOS
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.5.0")]
    public class RegistrosIncorretoConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<RegistrosIncorreto>
    {
        public RegistrosIncorretoConfiguration()
            : this("dbo")
        {
        }

        public RegistrosIncorretoConfiguration(string schema)
        {
            ToTable("REGISTROS_INCORRETOS", schema);
            HasKey(x => x.Id);

            Property(x => x.Id).HasColumnName(@"ID").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.Operadora).HasColumnName(@"operadora").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(50);
            Property(x => x.TipoServico).HasColumnName(@"tipoServico").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(50);
            Property(x => x.NumNf).HasColumnName(@"numNf").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(50);
            Property(x => x.NumOrigem).HasColumnName(@"numOrigem").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(50);
            Property(x => x.NumDestino).HasColumnName(@"numDestino").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(50);
            Property(x => x.Mes).HasColumnName(@"mes").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(50);
            Property(x => x.Data).HasColumnName(@"data").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(50);
            Property(x => x.Codigo).HasColumnName(@"codigo").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(50);
            Property(x => x.Grupo).HasColumnName(@"grupo").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(50);
            Property(x => x.Codigo2).HasColumnName(@"codigo2").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(50);
            Property(x => x.Servico).HasColumnName(@"servico").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(50);
            Property(x => x.Duracao).HasColumnName(@"duracao").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(50);
            Property(x => x.Min).HasColumnName(@"min").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(50);
            Property(x => x.Dados).HasColumnName(@"dados").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(50);
            Property(x => x.Horario).HasColumnName(@"horario").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(50);
            Property(x => x.Cidade).HasColumnName(@"cidade").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(50);
            Property(x => x.Regiao).HasColumnName(@"regiao").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(50);
            Property(x => x.Estado).HasColumnName(@"estado").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(50);
            Property(x => x.Pais).HasColumnName(@"pais").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(50);
            Property(x => x.Valor).HasColumnName(@"valor").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(50);
            Property(x => x.ValorCobrado).HasColumnName(@"valorCobrado").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(50);
            Property(x => x.Degrau).HasColumnName(@"degrau").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(50);
            Property(x => x.UfOrigem).HasColumnName(@"ufOrigem").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(50);
            Property(x => x.FkLogImportacao).HasColumnName(@"FK_LOG_IMPORTACAO").HasColumnType("int").IsRequired();

            // Foreign keys
            HasRequired(a => a.LogImportacao).WithMany(b => b.RegistrosIncorretoes).HasForeignKey(c => c.FkLogImportacao).WillCascadeOnDelete(false); // FK_REGISTROS_INCORRETOS_LOG_IMPORTACAO
        }
    }

    // SERVICO
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.5.0")]
    public class ServicoConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<Servico>
    {
        public ServicoConfiguration()
            : this("dbo")
        {
        }

        public ServicoConfiguration(string schema)
        {
            ToTable("SERVICO", schema);
            HasKey(x => x.Id);

            Property(x => x.Id).HasColumnName(@"ID").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.Nome).HasColumnName(@"NOME").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(100);
            Property(x => x.Descricao).HasColumnName(@"DESCRICAO").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(100);
            Property(x => x.FkGrupoDeServico).HasColumnName(@"FK_GRUPO_DE_SERVICO").HasColumnType("int").IsRequired();
            Property(x => x.FkUnidadeDeMedida).HasColumnName(@"FK_UNIDADE_DE_MEDIDA").HasColumnType("int").IsRequired();

            // Foreign keys
            HasRequired(a => a.GrupoDeServico).WithMany(b => b.Servicoes).HasForeignKey(c => c.FkGrupoDeServico).WillCascadeOnDelete(false); // FK_SERVICO_GRUPO_DE_SERVICO
            HasRequired(a => a.UnidadeDeMedida).WithMany(b => b.Servicoes).HasForeignKey(c => c.FkUnidadeDeMedida).WillCascadeOnDelete(false); // FK_SERVICO_UNIDADE_DE_MEDIDA
        }
    }

    // TEMPLATE_TERMO_EMAIL
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.5.0")]
    public class TemplateTermoEmailConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<TemplateTermoEmail>
    {
        public TemplateTermoEmailConfiguration()
            : this("dbo")
        {
        }

        public TemplateTermoEmailConfiguration(string schema)
        {
            ToTable("TEMPLATE_TERMO_EMAIL", schema);
            HasKey(x => x.Id);

            Property(x => x.Id).HasColumnName(@"ID").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.FkTipo).HasColumnName(@"FK_TIPO").HasColumnType("int").IsRequired();
            Property(x => x.Título).HasColumnName(@"TÍTULO").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(80);
            Property(x => x.Email).HasColumnName(@"EMAIL").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(500);
            Property(x => x.FkEmpresa).HasColumnName(@"FK_EMPRESA").HasColumnType("int").IsRequired();

            // Foreign keys
            HasRequired(a => a.Empresa).WithMany(b => b.TemplateTermoEmails).HasForeignKey(c => c.FkEmpresa).WillCascadeOnDelete(false); // FK_TEMPLATE_TERMO_EMAIL_EMPRESA
            HasRequired(a => a.TipoTermo).WithMany(b => b.TemplateTermoEmails).HasForeignKey(c => c.FkTipo).WillCascadeOnDelete(false); // FK_TEMPLATE_TERMO_EMAIL_TIPO_TERMO
        }
    }

    // TIPO_ATIVO
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.5.0")]
    public class TipoAtivoConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<TipoAtivo>
    {
        public TipoAtivoConfiguration()
            : this("dbo")
        {
        }

        public TipoAtivoConfiguration(string schema)
        {
            ToTable("TIPO_ATIVO", schema);
            HasKey(x => x.Id);

            Property(x => x.Id).HasColumnName(@"ID").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.Nome).HasColumnName(@"NOME").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(50);
            Property(x => x.FkEmpresa).HasColumnName(@"FK_EMPRESA").HasColumnType("int").IsRequired();

            // Foreign keys
            HasRequired(a => a.Empresa).WithMany(b => b.TipoAtivoes).HasForeignKey(c => c.FkEmpresa).WillCascadeOnDelete(false); // FK_TIPO_ATIVO_EMPRESA
        }
    }

    // TIPO_CONTA
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.5.0")]
    public class TipoContaConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<TipoConta>
    {
        public TipoContaConfiguration()
            : this("dbo")
        {
        }

        public TipoContaConfiguration(string schema)
        {
            ToTable("TIPO_CONTA", schema);
            HasKey(x => x.Id);

            Property(x => x.Id).HasColumnName(@"ID").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.Nome).HasColumnName(@"NOME").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(50);
        }
    }

    // TIPO_TERMO
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.5.0")]
    public class TipoTermoConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<TipoTermo>
    {
        public TipoTermoConfiguration()
            : this("dbo")
        {
        }

        public TipoTermoConfiguration(string schema)
        {
            ToTable("TIPO_TERMO", schema);
            HasKey(x => x.Id);

            Property(x => x.Id).HasColumnName(@"ID").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.Nome).HasColumnName(@"NOME").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(50);
        }
    }

    // UF
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.5.0")]
    public class UfConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<Uf>
    {
        public UfConfiguration()
            : this("dbo")
        {
        }

        public UfConfiguration(string schema)
        {
            ToTable("UF", schema);
            HasKey(x => x.Id);

            Property(x => x.Id).HasColumnName(@"ID").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.Nome).HasColumnName(@"NOME").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(50);
            Property(x => x.Sigla).HasColumnName(@"SIGLA").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(10);
            Property(x => x.FkPais).HasColumnName(@"FK_PAIS").HasColumnType("int").IsRequired();
            Property(x => x.Ddd).HasColumnName(@"DDD").HasColumnType("int").IsRequired();

            // Foreign keys
            HasRequired(a => a.Pai).WithMany(b => b.Ufs).HasForeignKey(c => c.FkPais).WillCascadeOnDelete(false); // FK_UF_PAIS
        }
    }

    // UNIDADE_DE_MEDIDA
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.5.0")]
    public class UnidadeDeMedidaConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<UnidadeDeMedida>
    {
        public UnidadeDeMedidaConfiguration()
            : this("dbo")
        {
        }

        public UnidadeDeMedidaConfiguration(string schema)
        {
            ToTable("UNIDADE_DE_MEDIDA", schema);
            HasKey(x => x.Id);

            Property(x => x.Id).HasColumnName(@"ID").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.Nome).HasColumnName(@"NOME").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(100);
            Property(x => x.Descricao).HasColumnName(@"DESCRICAO").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(100);
            Property(x => x.Simbolo).HasColumnName(@"SIMBOLO").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(10);
        }
    }

    // USUARIO
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.5.0")]
    public class UsuarioConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<Usuario>
    {
        public UsuarioConfiguration()
            : this("dbo")
        {
        }

        public UsuarioConfiguration(string schema)
        {
            ToTable("USUARIO", schema);
            HasKey(x => x.Id);

            Property(x => x.Id).HasColumnName(@"ID").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.Nome).HasColumnName(@"NOME").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(150);
            Property(x => x.Login).HasColumnName(@"LOGIN").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(100);
            Property(x => x.Email).HasColumnName(@"EMAIL").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(100);
            Property(x => x.Cpf).HasColumnName(@"CPF").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(11);
            Property(x => x.FkPerfil).HasColumnName(@"FK_PERFIL").HasColumnType("int").IsRequired();
            Property(x => x.Senha).HasColumnName(@"SENHA").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(200);
            Property(x => x.FkEmpresa).HasColumnName(@"FK_EMPRESA").HasColumnType("int").IsRequired();
            Property(x => x.CreateAt).HasColumnName(@"CREATE_AT").HasColumnType("datetime").IsOptional();
            Property(x => x.UserCreate).HasColumnName(@"USER_CREATE").HasColumnType("int").IsOptional();
            Property(x => x.UpdateAt).HasColumnName(@"UPDATE_AT").HasColumnType("datetime").IsOptional();
            Property(x => x.UserUpdate).HasColumnName(@"USER_UPDATE").HasColumnType("int").IsOptional();
            Property(x => x.Status).HasColumnName(@"STATUS").HasColumnType("bit").IsRequired();
            Property(x => x.Removed).HasColumnName(@"REMOVED").HasColumnType("bit").IsRequired();

            // Foreign keys
            HasRequired(a => a.Empresa).WithMany(b => b.Usuarios).HasForeignKey(c => c.FkEmpresa).WillCascadeOnDelete(false); // FK_USUARIO_EMPRESA
            HasRequired(a => a.Perfil).WithMany(b => b.Usuarios).HasForeignKey(c => c.FkPerfil).WillCascadeOnDelete(false); // FK_USUARIO_PERFIL
        }
    }

    #endregion

}
// </auto-generated>

